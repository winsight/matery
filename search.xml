<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HEXO的一些插件及使用提醒</title>
      <link href="/matery/posts/d77e65f8/"/>
      <url>/matery/posts/d77e65f8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\matery\assets\css\APlayer.min.css"><script src="\matery\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>比较混乱，用来提示自己的</p><p><a href="https://yun.yunyoujun.cn/guide/config.html#%E5%86%85%E5%AE%B9%E5%8D%A1%E7%89%87">主题配置 | Hexo-Theme-Yun (yunyoujun.cn)</a></p><h1 id="🚀总体hexo安装"><a href="#🚀总体hexo安装" class="headerlink" title="🚀总体hexo安装"></a>🚀总体hexo安装</h1><p>在终端中输入以下命令：</p><pre class="language-sh" data-language="sh"><code class="language-sh">npm install hexo-cli -g</code></pre><p><code>install</code> 自然是安装。<br><code>hexo-cli</code> 则是 <code>hexo</code> 的终端工具，可以帮助你生成一些模版文件，之后再用到。<br><code>-g</code> 代表的是全局安装。也就是在任何地方都可以使用，否则会只能在安装的目录下使用。</p><p>接下来输入：</p><pre class="language-sh" data-language="sh"><code class="language-sh">hexo init 你的名字.github.io</code></pre><pre class="language-sh" data-language="sh"><code class="language-sh"># 进入你的博客文件夹cd 你的名字.github.io# 默认安装所有 &#96;package.json&#96; 文件中提到的包npm install# 你也可以缩写成 hexo shexo server</code></pre><p><code>server</code> 代表开启本地的 Hexo 服务器，这时你就可以打开浏览器，在地址栏中输入 <code>localhost:4000</code> 就可以看到本地的网页了。</p><p>按 <code>Ctrl + C</code> 中断服务器的运行。</p><p>至此，基础的模版页面便已经搭建好了。</p><h3 id="🎄使用-Hexo-主题"><a href="#🎄使用-Hexo-主题" class="headerlink" title="🎄使用 Hexo 主题"></a><strong>🎄使用 Hexo 主题</strong></h3><p>Hexo 默认提供的是 <a href="https://github.com/hexojs/hexo-theme-landscape">hexo-theme-landscape</a> 主题。<br>默认主题样式简单，功能较少。所以大多数人并不会使用默认主题。</p><p>这里将示范如何使用我自己开发的主题 <a href="https://github.com/YunYouJun/hexo-theme-yun">hexo-theme-yun</a>。</p><p><strong>下载 Hexo 主题</strong></p><p>进入终端（确保路径处于你此前使用 Hexo 初始化好的文件夹目录下，即 <code>xxx.github.io</code>，后简称为 <code>Hexo 目录</code>），输入以下命令。</p><blockquote><p>实际上你也可以直接在 VS Code 中使用终端。</p></blockquote><pre class="language-sh" data-language="sh"><code class="language-sh">git clone https:&#x2F;&#x2F;github.com&#x2F;YunYouJun&#x2F;hexo-theme-yun themes&#x2F;yun</code></pre><blockquote><p>这里便使用到了我们此前安装的 Git，<code>git clone</code> 即代表克隆（也就是复制的作用）我的主题（托管于 GitHub，链接便是主题所在的地址），<code>themes/yun</code> 则代表放在你 Hexo 文件夹下的 <code>themes/yun</code> 文件夹里（没有该文件夹会自动新建）。</p></blockquote><h3 id="🎰生成静态文件和本地测试"><a href="#🎰生成静态文件和本地测试" class="headerlink" title="🎰生成静态文件和本地测试"></a><strong>🎰生成静态文件和本地测试</strong></h3><pre class="language-none"><code class="language-none">hexo g &amp;&amp; hexo s</code></pre><pre class="language-none"><code class="language-none">localhost:4000</code></pre><h1 id="🎇一些功能用法"><a href="#🎇一些功能用法" class="headerlink" title="🎇一些功能用法"></a>🎇一些功能用法</h1><h3 id="📖发布文章"><a href="#📖发布文章" class="headerlink" title="📖发布文章"></a>📖发布文章</h3><p>你需要在发布文章的时候写标头</p><pre class="language-none"><code class="language-none">title: 一个简约扁平化的Hexo静态主题博客-Quietcategories: HEXOtags:  - hexodate: 2020-11-03 20:33:36cover: &#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;duogongneng&#x2F;MyBlogImg@master&#x2F;imgQuietView.png&#39;</code></pre><p><strong>解释</strong></p><p><code>title</code>：文章标题</p><p><code>categories</code>：分类（最好只写一个）</p><p><code>tags</code>：标签可以多个</p><p><code>excerpt</code>：描述</p><p><code>date</code>：创建日期</p><p><code>cover</code>：缩略图（你不填就用默认的了）</p><h3 id="🔗转载の链接"><a href="#🔗转载の链接" class="headerlink" title="🔗转载の链接"></a>🔗转载の链接</h3><p><strong><a href="https://yun.yunyoujun.cn/guide/config.html#type">#</a>type</strong></p><p>为文章设置 <code>type</code> 属性，即可将其转为其他类型卡片，并跳转 <code>url</code> 设置的链接。</p><p>譬如：</p><pre class="language-md" data-language="md"><code class="language-md">---title: xxxtype: bilibiliurl: https:&#x2F;&#x2F;www.bilibili.com&#x2F;video&#x2F;av8153395&#x2F;---</code></pre><p>在文章标题前将会出现 bilibili 的图标，点击标题会跳转至对应的链接。</p><p>目前默认支持以下类型（哔哩哔哩、豆瓣、GitHub、网易云音乐、推特、微信公众号、微博、语雀、知乎、Notion、外链）：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">types</span><span class="token punctuation">:</span>  <span class="token key atrule">link</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> blue    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>external<span class="token punctuation">-</span>link<span class="token punctuation">-</span>line  <span class="token key atrule">bilibili</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#FF8EB3"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>bilibili<span class="token punctuation">-</span>line  <span class="token key atrule">douban</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#007722"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>douban<span class="token punctuation">-</span>line  <span class="token key atrule">github</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> black    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>github<span class="token punctuation">-</span>line  <span class="token key atrule">netease-cloud-music</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#C10D0C"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>netease<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>music<span class="token punctuation">-</span>line  <span class="token key atrule">notion</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> black    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>notion  <span class="token key atrule">twitter</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#1da1f2"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>twitter<span class="token punctuation">-</span>line  <span class="token key atrule">wechat</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#1AAD19"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>wechat<span class="token punctuation">-</span>2<span class="token punctuation">-</span>line  <span class="token key atrule">weibo</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#E6162D"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>weibo<span class="token punctuation">-</span>line  <span class="token key atrule">yuque</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#25b864"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>yuque  <span class="token key atrule">zhihu</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#0084FF"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>zhihu<span class="token punctuation">-</span>line</code></pre><h3 id="📌置顶"><a href="#📌置顶" class="headerlink" title="📌置顶"></a>📌置顶</h3><blockquote><p>确保你的 <a href="https://github.com/hexojs/hexo-generator-index">hexo-generator-index (opens new window)</a>为 <code>2.0.0</code> 或以上</p></blockquote><p>通过设置文章 Front Matter 中 <code>sticky</code> 属性以进行置顶，数值越高，优先级越高。</p><p>设置置顶后，文章卡片右上角将出现置顶图标。</p><pre class="language-md" data-language="md"><code class="language-md">---title: xxxsticky: 100---</code></pre><p>你也可以通过设置权重来实现多篇置顶文章的顺序。</p><pre class="language-md" data-language="md"><code class="language-md">---title: xxxsticky: 1------title: xxxsticky: 2---</code></pre><p>此时 <code>sticky: 2</code> 的文章将排列在 <code>sticky: 1</code> 的文章上面。</p><h3 id="📃分栏显示"><a href="#📃分栏显示" class="headerlink" title="📃分栏显示"></a>📃分栏显示</h3><div class="tag-common tabs" id="first-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#first-unique-name-1">First unique name 1</a></li><li class="tab"><a href="#first-unique-name-2">First unique name 2</a></li><li class="tab"><a href="#first-unique-name-3">First unique name 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="first-unique-name-1"><p><strong>你猜我是谁?</strong></p></div><div class="tab-pane" id="first-unique-name-2"><p><strong>你猜我是谁?</strong></p></div><div class="tab-pane" id="first-unique-name-3"><p><strong>你猜我是谁?</strong></p></div></div></div><pre class="language-c++" data-language="c++"><code class="language-c++">&#123;% tabs First unique name %&#125;&lt;!-- tab --&gt;**This is Tab 1.**&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**This is Tab 2.**&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**This is Tab 3.**&lt;!-- endtab --&gt;&#123;% endtabs %&#125;</code></pre><h1 id="🎯hexo插件"><a href="#🎯hexo插件" class="headerlink" title="🎯hexo插件"></a>🎯<strong>hexo插件</strong></h1><pre class="language-python" data-language="python"><code class="language-python">npm install plug<span class="token operator">-</span><span class="token keyword">in</span><span class="token operator">-</span>name <span class="token operator">-</span><span class="token operator">-</span>save</code></pre><p>打开 git，将当前目录切换到你的博客目录。使用 </p><pre class="language-none"><code class="language-none">npm ls -dept 0</code></pre><p>即可查看，所有你<strong>安装的 hexo 插件</strong>。</p><h3 id="🎨使用图片绝对链接插件"><a href="#🎨使用图片绝对链接插件" class="headerlink" title="🎨使用图片绝对链接插件"></a>🎨使用图片绝对链接插件</h3><pre class="language-none"><code class="language-none">hexo-asset-image</code></pre><p>使用起来很简单，页面引入图片的方式也是md以前的语法</p><p><strong>安装</strong></p><pre class="language-shell" data-language="shell"><code class="language-shell">npm install hexo-asset-image --save1</code></pre><p>确保 <code>_config.yml</code> 中 <code>post_asset_folder: true</code>.</p><p>使用 <code>![logo](logo.jpg)</code> 就可引用到图片 <code>logo.jpg</code>.</p><h3 id="🎵aplayer"><a href="#🎵aplayer" class="headerlink" title="🎵aplayer"></a>🎵<strong>aplayer</strong></h3><p><strong>安装</strong></p><pre class="language-none"><code class="language-none">npm install --save hexo-tag-aplayer</code></pre><p><strong>依赖</strong></p><ul><li>APlayer.js &gt; 1.8.0</li><li>Meting.js &gt; 1.1.1</li></ul><p><strong>使用</strong></p><pre class="language-none"><code class="language-none">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</code></pre><p><strong>标签参数</strong></p><ul><li><code>title</code> : 曲目标题</li><li><code>author</code>: 曲目作者</li><li><code>url</code>: 音乐文件 URL 地址</li><li><code>picture_url</code>: (可选) 音乐对应的图片地址</li><li><code>narrow</code>: （可选）播放器袖珍风格</li><li><code>autoplay</code>: (可选) 自动播放，移动端浏览器暂时不支持此功能</li><li><code>width:xxx</code>: (可选) 播放器宽度 (默认: 100%)</li><li><code>lrc:xxx</code>: （可选）歌词文件 URL 地址</li></ul><p>当开启 Hexo 的 <a href="https://hexo.io/zh-cn/docs/asset-folders.html#%E6%96%87%E7%AB%A0%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%A4%B9">文章资源文件夹</a> 功能时，可以将图片、音乐文件、歌词文件放入与文章对应的资源文件夹中，然后直接引用：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">%</span> aplayer <span class="token string">"Caffeine"</span> <span class="token string">"Jeff Williams"</span> <span class="token string">"caffeine.mp3"</span> <span class="token string">"picture.jpg"</span> <span class="token string">"lrc:caffeine.txt"</span> <span class="token operator">%</span><span class="token punctuation">&#125;</span></code></pre><p><strong>歌词标签</strong></p><p>除了使用标签 <code>lrc</code> 选项来设定歌词，你也可以直接使用 <code>aplayerlrc</code> 标签来直接插入歌词文本在博客中：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">%</span> aplayerlrc <span class="token string">"title"</span> <span class="token string">"author"</span> <span class="token string">"url"</span> <span class="token string">"autoplay"</span> <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token punctuation">[</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00.00</span><span class="token punctuation">]</span>lrc here<span class="token punctuation">&#123;</span><span class="token operator">%</span> endaplayerlrc <span class="token operator">%</span><span class="token punctuation">&#125;</span></code></pre><p><strong>播放列表</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">%</span> aplayerlist <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>    <span class="token string">"narrow"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                          <span class="token comment">// （可选）播放器袖珍风格</span>    <span class="token string">"autoplay"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                         <span class="token comment">// （可选) 自动播放，移动端浏览器暂时不支持此功能</span>    <span class="token string">"mode"</span><span class="token operator">:</span> <span class="token string">"random"</span><span class="token punctuation">,</span>                         <span class="token comment">// （可选）曲目循环类型，有 'random'（随机播放）, 'single' (单曲播放), 'circulation' (循环播放), 'order' (列表播放)， 默认：'circulation' </span>    <span class="token string">"showlrc"</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>                             <span class="token comment">// （可选）歌词显示配置项，可选项有：1,2,3</span>    <span class="token string">"mutex"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                            <span class="token comment">// （可选）该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</span>    <span class="token string">"theme"</span><span class="token operator">:</span> <span class="token string">"#e6d0b2"</span><span class="token punctuation">,</span>                      <span class="token comment">// （可选）播放器风格色彩设置，默认：#b7daff</span>    <span class="token string">"preload"</span><span class="token operator">:</span> <span class="token string">"metadata"</span><span class="token punctuation">,</span>                    <span class="token comment">// （可选）音乐文件预载入模式，可选项： 'none' 'metadata' 'auto', 默认: 'auto'</span>    <span class="token string">"listmaxheight"</span><span class="token operator">:</span> <span class="token string">"513px"</span><span class="token punctuation">,</span>                 <span class="token comment">// (可选) 该播放列表的最大长度</span>    <span class="token string">"music"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            <span class="token string">"title"</span><span class="token operator">:</span> <span class="token string">"CoCo"</span><span class="token punctuation">,</span>            <span class="token string">"author"</span><span class="token operator">:</span> <span class="token string">"Jeff Williams"</span><span class="token punctuation">,</span>            <span class="token string">"url"</span><span class="token operator">:</span> <span class="token string">"caffeine.mp3"</span><span class="token punctuation">,</span>            <span class="token string">"pic"</span><span class="token operator">:</span> <span class="token string">"caffeine.jpeg"</span><span class="token punctuation">,</span>            <span class="token string">"lrc"</span><span class="token operator">:</span> <span class="token string">"caffeine.txt"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token string">"title"</span><span class="token operator">:</span> <span class="token string">"アイロニ"</span><span class="token punctuation">,</span>            <span class="token string">"author"</span><span class="token operator">:</span> <span class="token string">"鹿乃"</span><span class="token punctuation">,</span>            <span class="token string">"url"</span><span class="token operator">:</span> <span class="token string">"irony.mp3"</span><span class="token punctuation">,</span>            <span class="token string">"pic"</span><span class="token operator">:</span> <span class="token string">"irony.jpg"</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token operator">%</span> endaplayerlist <span class="token operator">%</span><span class="token punctuation">&#125;</span></code></pre><p><strong>MeingJS 支持 (3.0 新功能)</strong></p><p><a href="https://github.com/metowolf/MetingJS">MetingJS</a> 是基于<a href="https://github.com/metowolf/Meting">Meting API</a> 的 APlayer 衍生播放器，引入 MetingJS 后，播放器将支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。</p><p>如果想在本插件中使用 MetingJS，请在 Hexo 配置文件 <code>_config.yml</code> 中设置：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">aplayer<span class="token operator">:</span>  meting<span class="token operator">:</span> <span class="token boolean">true</span></code></pre><p>接着就可以通过 <code>&#123;% meting ...%&#125;</code> 在文章中使用 MetingJS 播放器了：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token function">简单示例</span> <span class="token punctuation">(</span>id<span class="token punctuation">,</span> server<span class="token punctuation">,</span> type<span class="token punctuation">)</span>  <span class="token operator">--</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token operator">%</span> meting <span class="token string">"60198"</span> <span class="token string">"netease"</span> <span class="token string">"playlist"</span> <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 进阶示例 <span class="token operator">--</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token operator">%</span> meting <span class="token string">"60198"</span> <span class="token string">"netease"</span> <span class="token string">"playlist"</span> <span class="token string">"autoplay"</span> <span class="token string">"mutex:false"</span> <span class="token string">"listmaxheight:340px"</span> <span class="token string">"preload:none"</span> <span class="token string">"theme:#ad7a86"</span><span class="token operator">%</span><span class="token punctuation">&#125;</span></code></pre><p>有关 <code>&#123;% meting %&#125;</code> 的选项列表如下:</p><table><thead><tr><th>选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td><strong>必须值</strong></td><td>歌曲 id / 播放列表 id / 相册 id / 搜索关键字</td></tr><tr><td>server</td><td><strong>必须值</strong></td><td>音乐平台: <code>netease</code>, <code>tencent</code>, <code>kugou</code>, <code>xiami</code>, <code>baidu</code></td></tr><tr><td>type</td><td><strong>必须值</strong></td><td><code>song</code>, <code>playlist</code>, <code>album</code>, <code>search</code>, <code>artist</code></td></tr><tr><td>fixed</td><td><code>false</code></td><td>开启固定模式</td></tr><tr><td>mini</td><td><code>false</code></td><td>开启迷你模式</td></tr><tr><td>loop</td><td><code>all</code></td><td>列表循环模式：<code>all</code>, <code>one</code>,<code>none</code></td></tr><tr><td>order</td><td><code>list</code></td><td>列表播放模式： <code>list</code>, <code>random</code></td></tr><tr><td>volume</td><td>0.7</td><td>播放器音量</td></tr><tr><td>lrctype</td><td>0</td><td>歌词格式类型</td></tr><tr><td>listfolded</td><td><code>false</code></td><td>指定音乐播放列表是否折叠</td></tr><tr><td>storagename</td><td><code>metingjs</code></td><td>LocalStorage 中存储播放器设定的键名</td></tr><tr><td>autoplay</td><td><code>true</code></td><td>自动播放，移动端浏览器暂时不支持此功能</td></tr><tr><td>mutex</td><td><code>true</code></td><td>该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</td></tr><tr><td>listmaxheight</td><td><code>340px</code></td><td>播放列表的最大长度</td></tr><tr><td>preload</td><td><code>auto</code></td><td>音乐文件预载入模式，可选项： <code>none</code>, <code>metadata</code>, <code>auto</code></td></tr><tr><td>theme</td><td><code>#ad7a86</code></td><td>播放器风格色彩设置</td></tr></tbody></table><p>关于如何设置自建的 Meting API 服务器地址，以及其他 MetingJS 配置，请参考章节<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE30-%E6%96%B0%E5%8A%9F%E8%83%BD">自定义配置</a></p><h3 id="💻DPlayer"><a href="#💻DPlayer" class="headerlink" title="💻DPlayer"></a>💻DPlayer</h3><pre class="language-none"><code class="language-none">npm install hexo-tag-dplayer --save</code></pre><p><strong>Usage</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">%</span> dplayer key<span class="token operator">=</span>value <span class="token operator">...</span> <span class="token operator">%</span><span class="token punctuation">&#125;</span></code></pre><p><strong>key can be</strong></p><pre class="language-none"><code class="language-none">dplayer options:    &#39;autoplay&#39;, &#39;loop&#39;, &#39;screenshot&#39;, &#39;hotkey&#39;, &#39;mutex&#39;, &#39;dmunlimited&#39; : bool options, use &quot;yes&quot; &quot;y&quot; &quot;true&quot; &quot;1&quot; &quot;on&quot; or just without value to enable    &#39;preload&#39;, &#39;theme&#39;, &#39;lang&#39;, &#39;logo&#39;, &#39;url&#39;, &#39;pic&#39;, &#39;thumbnails&#39;, &#39;vidtype&#39;, &#39;suburl&#39;, &#39;subtype&#39;, &#39;subbottom&#39;, &#39;subcolor&#39;, &#39;subcolor&#39;, &#39;id&#39;, &#39;api&#39;, &#39;token&#39;, &#39;addition&#39;, &#39;dmuser&#39; : string arguments    &#39;volume&#39;, &#39;maximum&#39; : number argumentscontainer options:    &#39;width&#39;, &#39;height&#39; : string, used in container element styleother:    &#39;code&#39; : value of this key will be append to script tag</code></pre><p><strong>arguments to DPlayer options mapping:</strong></p><pre class="language-none"><code class="language-none">&#123;    container: &quot;you needn&#39;t set this&quot;,    autoplay: &#39;autoplay&#39;,    theme: &#39;theme&#39;,    loop: &#39;loop&#39;,    lang: &#39;lang&#39;,    screenshot: &#39;screenshot&#39;,    hotkey: &#39;hotkey&#39;,    preload: &#39;preload&#39;,    logo: &#39;logo&#39;,    volume: &#39;volume&#39;,    mutex: &#39;mutex&#39;,    video: &#123;        url: &#39;url&#39;,        pic: &#39;pic&#39;,        thumbnails: &#39;thumbnails&#39;,        type: &#39;vidtype&#39;,    &#125;,    subtitle: &#123;        url: &#39;suburl&#39;,        type: &#39;subtype&#39;,        fontSize: &#39;subsize&#39;,        bottom: &#39;subbottom&#39;,        color: &#39;subcolor&#39;,    &#125;,    danmaku: &#123;        id: &#39;id&#39;,        api: &#39;api&#39;,        token: &#39;token&#39;,        maximum: &#39;maximum&#39;,        addition: [&#39;addition&#39;],        user: &#39;dmuser&#39;,        unlimited: &#39;dmunlimited&#39;,    &#125;,    icons: &#39;icons&#39;,    contextmenu: &#39;menu&#39;,&#125;</code></pre><p>see dplayer documents for more infomation.</p><p><strong>for example:</strong></p><pre class="language-none"><code class="language-none">&#123;% dplayer &quot;url&#x3D;https:&#x2F;&#x2F;moeplayer.b0.upaiyun.com&#x2F;dplayer&#x2F;hikarunara.mp4&quot; &quot;addition&#x3D;https:&#x2F;&#x2F;dplayer.daoapp.io&#x2F;bilibili?aid&#x3D;4157142&quot; &quot;api&#x3D;https:&#x2F;&#x2F;api.prprpr.me&#x2F;dplayer&#x2F;&quot; &quot;pic&#x3D;https:&#x2F;&#x2F;moeplayer.b0.upaiyun.com&#x2F;dplayer&#x2F;hikarunara.jpg&quot; &quot;id&#x3D;9E2E3368B56CDBB4&quot; &quot;loop&#x3D;yes&quot; &quot;theme&#x3D;#FADFA3&quot; &quot;autoplay&#x3D;false&quot; &quot;token&#x3D;tokendemo&quot; %&#125;&#123;% dplayer &#39;url&#x3D;some.mp4&#39; &quot;id&#x3D;someid&quot; &quot;api&#x3D;https:&#x2F;&#x2F;api.prprpr.me&#x2F;dplayer&#x2F;&quot; &quot;addition&#x3D;&#x2F;some.json&quot; &#39;code&#x3D;player.on(&quot;loadstart&quot;,function()&#123;console.log(&quot;loadstart&quot;)&#125;)&#39; &quot;autoplay&quot; %&#125; </code></pre><h3 id="📫文章加密"><a href="#📫文章加密" class="headerlink" title="📫文章加密"></a>📫文章加密</h3><p><strong>在线演示</strong></p><ul><li>点击 <a href="https://mhexo.github.io/">Demo Page</a>, <strong>所有的密码都是 <code>hello</code></strong>.<a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md">hexo-blog-encrypt/ReadMe.zh.md at master · D0n9X1n/hexo-blog-encrypt (github.com)</a></li></ul><p><strong>安装</strong></p><ul><li><code>npm install --save hexo-blog-encrypt</code></li><li>或 <code>yarn add hexo-blog-encrypt</code> (需要) <a href="https://yarnpkg.com/en/">Yarn</a>)</li></ul><p><strong>快速使用</strong></p><ul><li>将 “password” 字段添加到您文章信息头就像这样.</li></ul><pre class="language-none"><code class="language-none">---title: Hello Worlddate: 2016-03-30 21:18:02password: hello---</code></pre><ul><li>再使用 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code> 在本地预览加密的文章.</li></ul><p><strong>设置优先级</strong></p><p>文章信息头 &gt; 按标签加密</p><p><strong>高级设置</strong></p><p><strong>文章信息头</strong></p><pre class="language-none"><code class="language-none">---title: Hello Worldtags:- 作为日记加密date: 2016-03-30 21:12:21password: mikemessiabstract: 有东西被加密了, 请输入密码查看.message: 您好, 这里需要密码.wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.---</code></pre><p><strong><code>_config.yml</code></strong></p><p><strong>对博文禁用 Tag 加密</strong></p><p>只需要将博文头部的 <code>password</code> 设置为 <code>&quot;&quot;</code> 即可取消 Tag 加密.</p><p>Example:</p><pre class="language-none"><code class="language-none">---title: Callback Testdate: 2019-12-21 11:54:07tags:    - A Tag should be encryptedpassword: &quot;&quot;---Use a &quot;&quot; to diable tag encryption.</code></pre><h3 id="🔗Hexo设置永久链接"><a href="#🔗Hexo设置永久链接" class="headerlink" title="🔗Hexo设置永久链接"></a>🔗Hexo设置永久链接</h3><pre class="language-undefined" data-language="undefined"><code class="language-undefined">npm install hexo-abbrlink --save</code></pre><p>执行此命令可能会不成功，提示你缺少相应的依赖比如babel-eslint、mini-css-extract-plugin、webpack-cli…<br>使用npm命令安装即可，比如npm install <a href="mailto:&#101;&#115;&#108;&#105;&#110;&#x74;&#64;&#52;&#46;&#120;">&#101;&#115;&#108;&#105;&#110;&#x74;&#64;&#52;&#46;&#120;</a> babel-eslint@8 –save-dev</p><p><strong>配置</strong></p><p>修改根目录站点配置文件_config.yml，改为：</p><pre class="language-ruby" data-language="ruby"><code class="language-ruby">permalink<span class="token punctuation">:</span> posts<span class="token operator">/</span><span class="token symbol">:abbrlink</span><span class="token punctuation">.</span>html  <span class="token comment"># 此处可以自己设置，也可以直接使用 /:abbrlink  posts也可改也可以去掉</span>abbrlink<span class="token punctuation">:</span>    alg<span class="token punctuation">:</span> crc32   <span class="token comment">#算法： crc16(default) and crc32</span>    rep<span class="token punctuation">:</span> hex     <span class="token comment">#进制： dec(default) and hex</span></code></pre><p>生成的链接将会是这样的(官方样例)：</p><pre class="language-cpp" data-language="cpp"><code class="language-cpp">crc16 <span class="token operator">&amp;</span> dechttps<span class="token operator">:</span><span class="token comment">//post.zz173.com/posts/65535.html</span>crc32 <span class="token operator">&amp;</span> hexhttps<span class="token operator">:</span><span class="token comment">//post.zz173.com/posts/8ddf18fb.html</span></code></pre><p>生成完后，原md文件的Front-matter 内会增加abbrlink 字段，值为生成的ID 。这个字段确保了在我们修改了Front-matter 内的博客标题title或创建日期date字段之后而不会改变链接地址。</p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO的一些使用提醒</title>
      <link href="/matery/posts/d77e65f8/"/>
      <url>/matery/posts/d77e65f8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\matery\assets\css\APlayer.min.css"><script src="\matery\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>比较混乱，用来提示自己的</p><p><a href="https://yun.yunyoujun.cn/guide/config.html#%E5%86%85%E5%AE%B9%E5%8D%A1%E7%89%87">主题配置 | Hexo-Theme-Yun (yunyoujun.cn)</a></p><h1 id="总体hexo安装"><a href="#总体hexo安装" class="headerlink" title="总体hexo安装"></a>总体hexo安装</h1><p>在终端中输入以下命令：</p><pre class="language-sh" data-language="sh"><code class="language-sh">npm install hexo-cli -g</code></pre><p><code>install</code> 自然是安装。<br><code>hexo-cli</code> 则是 <code>hexo</code> 的终端工具，可以帮助你生成一些模版文件，之后再用到。<br><code>-g</code> 代表的是全局安装。也就是在任何地方都可以使用，否则会只能在安装的目录下使用。</p><p>接下来输入：</p><pre class="language-sh" data-language="sh"><code class="language-sh">hexo init 你的名字.github.io</code></pre><pre class="language-sh" data-language="sh"><code class="language-sh"># 进入你的博客文件夹cd 你的名字.github.io# 默认安装所有 &#96;package.json&#96; 文件中提到的包npm install# 你也可以缩写成 hexo shexo server</code></pre><p><code>server</code> 代表开启本地的 Hexo 服务器，这时你就可以打开浏览器，在地址栏中输入 <code>localhost:4000</code> 就可以看到本地的网页了。</p><p>按 <code>Ctrl + C</code> 中断服务器的运行。</p><p>至此，基础的模版页面便已经搭建好了。</p><h3 id="使用-Hexo-主题"><a href="#使用-Hexo-主题" class="headerlink" title="使用 Hexo 主题"></a><strong>使用 Hexo 主题</strong></h3><p>Hexo 默认提供的是 <a href="https://github.com/hexojs/hexo-theme-landscape">hexo-theme-landscape</a> 主题。<br>默认主题样式简单，功能较少。所以大多数人并不会使用默认主题。</p><p>这里将示范如何使用我自己开发的主题 <a href="https://github.com/YunYouJun/hexo-theme-yun">hexo-theme-yun</a>。</p><p><strong>下载 Hexo 主题</strong></p><p>进入终端（确保路径处于你此前使用 Hexo 初始化好的文件夹目录下，即 <code>xxx.github.io</code>，后简称为 <code>Hexo 目录</code>），输入以下命令。</p><blockquote><p>实际上你也可以直接在 VS Code 中使用终端。</p></blockquote><pre class="language-sh" data-language="sh"><code class="language-sh">git clone https:&#x2F;&#x2F;github.com&#x2F;YunYouJun&#x2F;hexo-theme-yun themes&#x2F;yun</code></pre><blockquote><p>这里便使用到了我们此前安装的 Git，<code>git clone</code> 即代表克隆（也就是复制的作用）我的主题（托管于 GitHub，链接便是主题所在的地址），<code>themes/yun</code> 则代表放在你 Hexo 文件夹下的 <code>themes/yun</code> 文件夹里（没有该文件夹会自动新建）。</p></blockquote><h3 id="生成静态文件和本地测试"><a href="#生成静态文件和本地测试" class="headerlink" title="生成静态文件和本地测试"></a><strong>生成静态文件和本地测试</strong></h3><pre class="language-none"><code class="language-none">hexo g &amp;&amp; hexo s</code></pre><pre class="language-none"><code class="language-none">localhost:4000</code></pre><h1 id="一些功能用法"><a href="#一些功能用法" class="headerlink" title="一些功能用法"></a>一些功能用法</h1><h3 id="📖发布文章"><a href="#📖发布文章" class="headerlink" title="📖发布文章"></a>📖发布文章</h3><p>你需要在发布文章的时候写标头</p><pre class="language-none"><code class="language-none">title: 一个简约扁平化的Hexo静态主题博客-Quietcategories: HEXOtags:  - hexodate: 2020-11-03 20:33:36cover: &#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;duogongneng&#x2F;MyBlogImg@master&#x2F;imgQuietView.png&#39;</code></pre><p><strong>解释</strong></p><p><code>title</code>：文章标题</p><p><code>categories</code>：分类（最好只写一个）</p><p><code>tags</code>：标签可以多个</p><p><code>excerpt</code>：描述</p><p><code>date</code>：创建日期</p><p><code>cover</code>：缩略图（你不填就用默认的了）</p><h3 id="转载の链接"><a href="#转载の链接" class="headerlink" title="转载の链接"></a>转载の链接</h3><p><strong><a href="https://yun.yunyoujun.cn/guide/config.html#type">#</a>type</strong></p><p>为文章设置 <code>type</code> 属性，即可将其转为其他类型卡片，并跳转 <code>url</code> 设置的链接。</p><p>譬如：</p><pre class="language-md" data-language="md"><code class="language-md">---title: xxxtype: bilibiliurl: https:&#x2F;&#x2F;www.bilibili.com&#x2F;video&#x2F;av8153395&#x2F;---</code></pre><p>在文章标题前将会出现 bilibili 的图标，点击标题会跳转至对应的链接。</p><p>目前默认支持以下类型（哔哩哔哩、豆瓣、GitHub、网易云音乐、推特、微信公众号、微博、语雀、知乎、Notion、外链）：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">types</span><span class="token punctuation">:</span>  <span class="token key atrule">link</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> blue    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>external<span class="token punctuation">-</span>link<span class="token punctuation">-</span>line  <span class="token key atrule">bilibili</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#FF8EB3"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>bilibili<span class="token punctuation">-</span>line  <span class="token key atrule">douban</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#007722"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>douban<span class="token punctuation">-</span>line  <span class="token key atrule">github</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> black    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>github<span class="token punctuation">-</span>line  <span class="token key atrule">netease-cloud-music</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#C10D0C"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>netease<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>music<span class="token punctuation">-</span>line  <span class="token key atrule">notion</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> black    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>notion  <span class="token key atrule">twitter</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#1da1f2"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>twitter<span class="token punctuation">-</span>line  <span class="token key atrule">wechat</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#1AAD19"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>wechat<span class="token punctuation">-</span>2<span class="token punctuation">-</span>line  <span class="token key atrule">weibo</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#E6162D"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>weibo<span class="token punctuation">-</span>line  <span class="token key atrule">yuque</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#25b864"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>yuque  <span class="token key atrule">zhihu</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#0084FF"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>zhihu<span class="token punctuation">-</span>line</code></pre><h3 id="置顶"><a href="#置顶" class="headerlink" title="置顶"></a>置顶</h3><blockquote><p>确保你的 <a href="https://github.com/hexojs/hexo-generator-index">hexo-generator-index (opens new window)</a>为 <code>2.0.0</code> 或以上</p></blockquote><p>通过设置文章 Front Matter 中 <code>sticky</code> 属性以进行置顶，数值越高，优先级越高。</p><p>设置置顶后，文章卡片右上角将出现置顶图标。</p><pre class="language-md" data-language="md"><code class="language-md">---title: xxxsticky: 100---</code></pre><p>你也可以通过设置权重来实现多篇置顶文章的顺序。</p><pre class="language-md" data-language="md"><code class="language-md">---title: xxxsticky: 1------title: xxxsticky: 2---</code></pre><p>此时 <code>sticky: 2</code> 的文章将排列在 <code>sticky: 1</code> 的文章上面。</p><h3 id="显示格式tab"><a href="#显示格式tab" class="headerlink" title="显示格式tab"></a>显示格式tab</h3><div class="tag-common tabs" id="first-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#first-unique-name-1">First unique name 1</a></li><li class="tab"><a href="#first-unique-name-2">First unique name 2</a></li><li class="tab"><a href="#first-unique-name-3">First unique name 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="first-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="first-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="first-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div><pre class="language-c++" data-language="c++"><code class="language-c++">&#123;% tabs First unique name %&#125;&lt;!-- tab --&gt;**This is Tab 1.**&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**This is Tab 2.**&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**This is Tab 3.**&lt;!-- endtab --&gt;&#123;% endtabs %&#125;</code></pre><h1 id="hexo插件"><a href="#hexo插件" class="headerlink" title="hexo插件"></a><strong>hexo插件</strong></h1><pre class="language-python" data-language="python"><code class="language-python">npm install plug<span class="token operator">-</span><span class="token keyword">in</span><span class="token operator">-</span>name <span class="token operator">-</span><span class="token operator">-</span>save</code></pre><p>打开 git，将当前目录切换到你的博客目录。使用 </p><pre class="language-none"><code class="language-none">npm ls -dept 0</code></pre><p>即可查看，所有你<strong>安装的 hexo 插件</strong>。</p><h3 id="使用图片绝对链接插件"><a href="#使用图片绝对链接插件" class="headerlink" title="使用图片绝对链接插件"></a>使用图片绝对链接插件</h3><pre class="language-none"><code class="language-none">hexo-asset-image</code></pre><p>使用起来很简单，页面引入图片的方式也是md以前的语法</p><p><strong>安装</strong></p><pre class="language-shell" data-language="shell"><code class="language-shell">npm install hexo-asset-image --save1</code></pre><p>确保 <code>_config.yml</code> 中 <code>post_asset_folder: true</code>.</p><p>使用 <code>![logo](logo.jpg)</code> 就可引用到图片 <code>logo.jpg</code>.</p><h3 id="aplayer"><a href="#aplayer" class="headerlink" title="aplayer"></a><strong>aplayer</strong></h3><p><strong>安装</strong></p><pre class="language-none"><code class="language-none">npm install --save hexo-tag-aplayer</code></pre><p><strong>依赖</strong></p><ul><li>APlayer.js &gt; 1.8.0</li><li>Meting.js &gt; 1.1.1</li></ul><p><strong>使用</strong></p><pre class="language-none"><code class="language-none">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</code></pre><p><strong>标签参数</strong></p><ul><li><code>title</code> : 曲目标题</li><li><code>author</code>: 曲目作者</li><li><code>url</code>: 音乐文件 URL 地址</li><li><code>picture_url</code>: (可选) 音乐对应的图片地址</li><li><code>narrow</code>: （可选）播放器袖珍风格</li><li><code>autoplay</code>: (可选) 自动播放，移动端浏览器暂时不支持此功能</li><li><code>width:xxx</code>: (可选) 播放器宽度 (默认: 100%)</li><li><code>lrc:xxx</code>: （可选）歌词文件 URL 地址</li></ul><p>当开启 Hexo 的 <a href="https://hexo.io/zh-cn/docs/asset-folders.html#%E6%96%87%E7%AB%A0%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%A4%B9">文章资源文件夹</a> 功能时，可以将图片、音乐文件、歌词文件放入与文章对应的资源文件夹中，然后直接引用：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">%</span> aplayer <span class="token string">"Caffeine"</span> <span class="token string">"Jeff Williams"</span> <span class="token string">"caffeine.mp3"</span> <span class="token string">"picture.jpg"</span> <span class="token string">"lrc:caffeine.txt"</span> <span class="token operator">%</span><span class="token punctuation">&#125;</span></code></pre><p><strong>歌词标签</strong></p><p>除了使用标签 <code>lrc</code> 选项来设定歌词，你也可以直接使用 <code>aplayerlrc</code> 标签来直接插入歌词文本在博客中：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">%</span> aplayerlrc <span class="token string">"title"</span> <span class="token string">"author"</span> <span class="token string">"url"</span> <span class="token string">"autoplay"</span> <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token punctuation">[</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">00.00</span><span class="token punctuation">]</span>lrc here<span class="token punctuation">&#123;</span><span class="token operator">%</span> endaplayerlrc <span class="token operator">%</span><span class="token punctuation">&#125;</span></code></pre><p><strong>播放列表</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">%</span> aplayerlist <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>    <span class="token string">"narrow"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                          <span class="token comment">// （可选）播放器袖珍风格</span>    <span class="token string">"autoplay"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                         <span class="token comment">// （可选) 自动播放，移动端浏览器暂时不支持此功能</span>    <span class="token string">"mode"</span><span class="token operator">:</span> <span class="token string">"random"</span><span class="token punctuation">,</span>                         <span class="token comment">// （可选）曲目循环类型，有 'random'（随机播放）, 'single' (单曲播放), 'circulation' (循环播放), 'order' (列表播放)， 默认：'circulation' </span>    <span class="token string">"showlrc"</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>                             <span class="token comment">// （可选）歌词显示配置项，可选项有：1,2,3</span>    <span class="token string">"mutex"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                            <span class="token comment">// （可选）该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</span>    <span class="token string">"theme"</span><span class="token operator">:</span> <span class="token string">"#e6d0b2"</span><span class="token punctuation">,</span>                      <span class="token comment">// （可选）播放器风格色彩设置，默认：#b7daff</span>    <span class="token string">"preload"</span><span class="token operator">:</span> <span class="token string">"metadata"</span><span class="token punctuation">,</span>                    <span class="token comment">// （可选）音乐文件预载入模式，可选项： 'none' 'metadata' 'auto', 默认: 'auto'</span>    <span class="token string">"listmaxheight"</span><span class="token operator">:</span> <span class="token string">"513px"</span><span class="token punctuation">,</span>                 <span class="token comment">// (可选) 该播放列表的最大长度</span>    <span class="token string">"music"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            <span class="token string">"title"</span><span class="token operator">:</span> <span class="token string">"CoCo"</span><span class="token punctuation">,</span>            <span class="token string">"author"</span><span class="token operator">:</span> <span class="token string">"Jeff Williams"</span><span class="token punctuation">,</span>            <span class="token string">"url"</span><span class="token operator">:</span> <span class="token string">"caffeine.mp3"</span><span class="token punctuation">,</span>            <span class="token string">"pic"</span><span class="token operator">:</span> <span class="token string">"caffeine.jpeg"</span><span class="token punctuation">,</span>            <span class="token string">"lrc"</span><span class="token operator">:</span> <span class="token string">"caffeine.txt"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token string">"title"</span><span class="token operator">:</span> <span class="token string">"アイロニ"</span><span class="token punctuation">,</span>            <span class="token string">"author"</span><span class="token operator">:</span> <span class="token string">"鹿乃"</span><span class="token punctuation">,</span>            <span class="token string">"url"</span><span class="token operator">:</span> <span class="token string">"irony.mp3"</span><span class="token punctuation">,</span>            <span class="token string">"pic"</span><span class="token operator">:</span> <span class="token string">"irony.jpg"</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token operator">%</span> endaplayerlist <span class="token operator">%</span><span class="token punctuation">&#125;</span></code></pre><p><strong>MeingJS 支持 (3.0 新功能)</strong></p><p><a href="https://github.com/metowolf/MetingJS">MetingJS</a> 是基于<a href="https://github.com/metowolf/Meting">Meting API</a> 的 APlayer 衍生播放器，引入 MetingJS 后，播放器将支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。</p><p>如果想在本插件中使用 MetingJS，请在 Hexo 配置文件 <code>_config.yml</code> 中设置：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">aplayer<span class="token operator">:</span>  meting<span class="token operator">:</span> <span class="token boolean">true</span></code></pre><p>接着就可以通过 <code>&#123;% meting ...%&#125;</code> 在文章中使用 MetingJS 播放器了：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token function">简单示例</span> <span class="token punctuation">(</span>id<span class="token punctuation">,</span> server<span class="token punctuation">,</span> type<span class="token punctuation">)</span>  <span class="token operator">--</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token operator">%</span> meting <span class="token string">"60198"</span> <span class="token string">"netease"</span> <span class="token string">"playlist"</span> <span class="token operator">%</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 进阶示例 <span class="token operator">--</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token operator">%</span> meting <span class="token string">"60198"</span> <span class="token string">"netease"</span> <span class="token string">"playlist"</span> <span class="token string">"autoplay"</span> <span class="token string">"mutex:false"</span> <span class="token string">"listmaxheight:340px"</span> <span class="token string">"preload:none"</span> <span class="token string">"theme:#ad7a86"</span><span class="token operator">%</span><span class="token punctuation">&#125;</span></code></pre><p>有关 <code>&#123;% meting %&#125;</code> 的选项列表如下:</p><table><thead><tr><th>选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td><strong>必须值</strong></td><td>歌曲 id / 播放列表 id / 相册 id / 搜索关键字</td></tr><tr><td>server</td><td><strong>必须值</strong></td><td>音乐平台: <code>netease</code>, <code>tencent</code>, <code>kugou</code>, <code>xiami</code>, <code>baidu</code></td></tr><tr><td>type</td><td><strong>必须值</strong></td><td><code>song</code>, <code>playlist</code>, <code>album</code>, <code>search</code>, <code>artist</code></td></tr><tr><td>fixed</td><td><code>false</code></td><td>开启固定模式</td></tr><tr><td>mini</td><td><code>false</code></td><td>开启迷你模式</td></tr><tr><td>loop</td><td><code>all</code></td><td>列表循环模式：<code>all</code>, <code>one</code>,<code>none</code></td></tr><tr><td>order</td><td><code>list</code></td><td>列表播放模式： <code>list</code>, <code>random</code></td></tr><tr><td>volume</td><td>0.7</td><td>播放器音量</td></tr><tr><td>lrctype</td><td>0</td><td>歌词格式类型</td></tr><tr><td>listfolded</td><td><code>false</code></td><td>指定音乐播放列表是否折叠</td></tr><tr><td>storagename</td><td><code>metingjs</code></td><td>LocalStorage 中存储播放器设定的键名</td></tr><tr><td>autoplay</td><td><code>true</code></td><td>自动播放，移动端浏览器暂时不支持此功能</td></tr><tr><td>mutex</td><td><code>true</code></td><td>该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</td></tr><tr><td>listmaxheight</td><td><code>340px</code></td><td>播放列表的最大长度</td></tr><tr><td>preload</td><td><code>auto</code></td><td>音乐文件预载入模式，可选项： <code>none</code>, <code>metadata</code>, <code>auto</code></td></tr><tr><td>theme</td><td><code>#ad7a86</code></td><td>播放器风格色彩设置</td></tr></tbody></table><p>关于如何设置自建的 Meting API 服务器地址，以及其他 MetingJS 配置，请参考章节<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE30-%E6%96%B0%E5%8A%9F%E8%83%BD">自定义配置</a></p><h3 id="DPlayer"><a href="#DPlayer" class="headerlink" title="DPlayer"></a>DPlayer</h3><pre class="language-none"><code class="language-none">npm install hexo-tag-dplayer --save</code></pre><p><strong>Usage</strong></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">%</span> dplayer key<span class="token operator">=</span>value <span class="token operator">...</span> <span class="token operator">%</span><span class="token punctuation">&#125;</span></code></pre><p><strong>key can be</strong></p><pre class="language-none"><code class="language-none">dplayer options:    &#39;autoplay&#39;, &#39;loop&#39;, &#39;screenshot&#39;, &#39;hotkey&#39;, &#39;mutex&#39;, &#39;dmunlimited&#39; : bool options, use &quot;yes&quot; &quot;y&quot; &quot;true&quot; &quot;1&quot; &quot;on&quot; or just without value to enable    &#39;preload&#39;, &#39;theme&#39;, &#39;lang&#39;, &#39;logo&#39;, &#39;url&#39;, &#39;pic&#39;, &#39;thumbnails&#39;, &#39;vidtype&#39;, &#39;suburl&#39;, &#39;subtype&#39;, &#39;subbottom&#39;, &#39;subcolor&#39;, &#39;subcolor&#39;, &#39;id&#39;, &#39;api&#39;, &#39;token&#39;, &#39;addition&#39;, &#39;dmuser&#39; : string arguments    &#39;volume&#39;, &#39;maximum&#39; : number argumentscontainer options:    &#39;width&#39;, &#39;height&#39; : string, used in container element styleother:    &#39;code&#39; : value of this key will be append to script tag</code></pre><p><strong>arguments to DPlayer options mapping:</strong></p><pre class="language-none"><code class="language-none">&#123;    container: &quot;you needn&#39;t set this&quot;,    autoplay: &#39;autoplay&#39;,    theme: &#39;theme&#39;,    loop: &#39;loop&#39;,    lang: &#39;lang&#39;,    screenshot: &#39;screenshot&#39;,    hotkey: &#39;hotkey&#39;,    preload: &#39;preload&#39;,    logo: &#39;logo&#39;,    volume: &#39;volume&#39;,    mutex: &#39;mutex&#39;,    video: &#123;        url: &#39;url&#39;,        pic: &#39;pic&#39;,        thumbnails: &#39;thumbnails&#39;,        type: &#39;vidtype&#39;,    &#125;,    subtitle: &#123;        url: &#39;suburl&#39;,        type: &#39;subtype&#39;,        fontSize: &#39;subsize&#39;,        bottom: &#39;subbottom&#39;,        color: &#39;subcolor&#39;,    &#125;,    danmaku: &#123;        id: &#39;id&#39;,        api: &#39;api&#39;,        token: &#39;token&#39;,        maximum: &#39;maximum&#39;,        addition: [&#39;addition&#39;],        user: &#39;dmuser&#39;,        unlimited: &#39;dmunlimited&#39;,    &#125;,    icons: &#39;icons&#39;,    contextmenu: &#39;menu&#39;,&#125;</code></pre><p>see dplayer documents for more infomation.</p><p><strong>for example:</strong></p><pre class="language-none"><code class="language-none">&#123;% dplayer &quot;url&#x3D;https:&#x2F;&#x2F;moeplayer.b0.upaiyun.com&#x2F;dplayer&#x2F;hikarunara.mp4&quot; &quot;addition&#x3D;https:&#x2F;&#x2F;dplayer.daoapp.io&#x2F;bilibili?aid&#x3D;4157142&quot; &quot;api&#x3D;https:&#x2F;&#x2F;api.prprpr.me&#x2F;dplayer&#x2F;&quot; &quot;pic&#x3D;https:&#x2F;&#x2F;moeplayer.b0.upaiyun.com&#x2F;dplayer&#x2F;hikarunara.jpg&quot; &quot;id&#x3D;9E2E3368B56CDBB4&quot; &quot;loop&#x3D;yes&quot; &quot;theme&#x3D;#FADFA3&quot; &quot;autoplay&#x3D;false&quot; &quot;token&#x3D;tokendemo&quot; %&#125;&#123;% dplayer &#39;url&#x3D;some.mp4&#39; &quot;id&#x3D;someid&quot; &quot;api&#x3D;https:&#x2F;&#x2F;api.prprpr.me&#x2F;dplayer&#x2F;&quot; &quot;addition&#x3D;&#x2F;some.json&quot; &#39;code&#x3D;player.on(&quot;loadstart&quot;,function()&#123;console.log(&quot;loadstart&quot;)&#125;)&#39; &quot;autoplay&quot; %&#125; </code></pre><h3 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h3><p><strong>在线演示</strong></p><ul><li>点击 <a href="https://mhexo.github.io/">Demo Page</a>, <strong>所有的密码都是 <code>hello</code></strong>.<a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md">hexo-blog-encrypt/ReadMe.zh.md at master · D0n9X1n/hexo-blog-encrypt (github.com)</a></li></ul><p><strong>安装</strong></p><ul><li><code>npm install --save hexo-blog-encrypt</code></li><li>或 <code>yarn add hexo-blog-encrypt</code> (需要) <a href="https://yarnpkg.com/en/">Yarn</a>)</li></ul><p><strong>快速使用</strong></p><ul><li>将 “password” 字段添加到您文章信息头就像这样.</li></ul><pre class="language-none"><code class="language-none">---title: Hello Worlddate: 2016-03-30 21:18:02password: hello---</code></pre><ul><li>再使用 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code> 在本地预览加密的文章.</li></ul><p><strong>设置优先级</strong></p><p>文章信息头 &gt; 按标签加密</p><p><strong>高级设置</strong></p><p><strong>文章信息头</strong></p><pre class="language-none"><code class="language-none">---title: Hello Worldtags:- 作为日记加密date: 2016-03-30 21:12:21password: mikemessiabstract: 有东西被加密了, 请输入密码查看.message: 您好, 这里需要密码.wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.---</code></pre><p><strong><code>_config.yml</code></strong></p><p><strong>对博文禁用 Tag 加密</strong></p><p>只需要将博文头部的 <code>password</code> 设置为 <code>&quot;&quot;</code> 即可取消 Tag 加密.</p><p>Example:</p><pre class="language-none"><code class="language-none">---title: Callback Testdate: 2019-12-21 11:54:07tags:    - A Tag should be encryptedpassword: &quot;&quot;---Use a &quot;&quot; to diable tag encryption.</code></pre><h3 id="Hexo设置永久链接"><a href="#Hexo设置永久链接" class="headerlink" title="Hexo设置永久链接"></a>Hexo设置永久链接</h3><pre class="language-undefined" data-language="undefined"><code class="language-undefined">npm install hexo-abbrlink --save</code></pre><p>执行此命令可能会不成功，提示你缺少相应的依赖比如babel-eslint、mini-css-extract-plugin、webpack-cli…<br>使用npm命令安装即可，比如npm install <a href="mailto:&#101;&#x73;&#x6c;&#105;&#110;&#x74;&#x40;&#x34;&#46;&#x78;">&#101;&#x73;&#x6c;&#105;&#110;&#x74;&#x40;&#x34;&#46;&#x78;</a> babel-eslint@8 –save-dev</p><p><strong>配置</strong></p><p>修改根目录站点配置文件_config.yml，改为：</p><pre class="language-ruby" data-language="ruby"><code class="language-ruby">permalink<span class="token punctuation">:</span> posts<span class="token operator">/</span><span class="token symbol">:abbrlink</span><span class="token punctuation">.</span>html  <span class="token comment"># 此处可以自己设置，也可以直接使用 /:abbrlink  posts也可改也可以去掉</span>abbrlink<span class="token punctuation">:</span>    alg<span class="token punctuation">:</span> crc32   <span class="token comment">#算法： crc16(default) and crc32</span>    rep<span class="token punctuation">:</span> hex     <span class="token comment">#进制： dec(default) and hex</span></code></pre><p>生成的链接将会是这样的(官方样例)：</p><pre class="language-cpp" data-language="cpp"><code class="language-cpp">crc16 <span class="token operator">&amp;</span> dechttps<span class="token operator">:</span><span class="token comment">//post.zz173.com/posts/65535.html</span>crc32 <span class="token operator">&amp;</span> hexhttps<span class="token operator">:</span><span class="token comment">//post.zz173.com/posts/8ddf18fb.html</span></code></pre><p>生成完后，原md文件的Front-matter 内会增加abbrlink 字段，值为生成的ID 。这个字段确保了在我们修改了Front-matter 内的博客标题title或创建日期date字段之后而不会改变链接地址。</p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些插件的用法示例</title>
      <link href="/matery/posts/ff28ec76/"/>
      <url>/matery/posts/ff28ec76/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\matery\assets\css\APlayer.min.css"><script src="\matery\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="音乐🎵"><a href="#音乐🎵" class="headerlink" title="音乐🎵"></a>音乐🎵</h1><h2 id="示例一-MetingJS播放器"><a href="#示例一-MetingJS播放器" class="headerlink" title="示例一(MetingJS播放器)"></a>示例一(MetingJS播放器)</h2><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">%</span> meting <span class="token string">"393688"</span> <span class="token string">"netease"</span> <span class="token string">"song"</span> <span class="token string">"theme:#C20C0C"</span> <span class="token operator">%</span><span class="token punctuation">&#125;</span># 只更改 “” 内数字即可# server必须值 音乐平台<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">netease</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">tencent</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">kugou</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">xiami</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">baidu</span><span class="token template-punctuation string">`</span></span></code></pre>            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css">            <script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js"></script>            <script src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script>            <meting-js id="393688" server="netease" type="song" autoplay="false" mutex="true" listmaxheight="340px" preload="auto" theme="#C20C0C"></meting-js><h2 id="示例二（本地资源加载-暂不可用）"><a href="#示例二（本地资源加载-暂不可用）" class="headerlink" title="示例二（本地资源加载\暂不可用）"></a>示例二（本地资源加载\暂不可用）</h2><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">%</span> aplayer <span class="token string">"汤家凤起床唤醒服务"</span> <span class="token string">"汤家凤"</span> <span class="token string">"tjf.mp3"</span> <span class="token string">"tjf.PNG"</span> <span class="token operator">%</span><span class="token punctuation">&#125;</span></code></pre>            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css">            <script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js"></script>            <div id="mmedia-iTHLfFgn" style="margin-bottom: 20px; width: "></div>        <script>          var ap_iTHLfFgn = new APlayer({            element: document.getElementById("mmedia-iTHLfFgn"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "汤家凤起床唤醒服务",              author: "汤家凤",              url: "tjf.mp3",              pic: "tjf.PNG",              lrc: ""            },            undefined          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap_iTHLfFgn);        </script><h2 id="示例三：歌单"><a href="#示例三：歌单" class="headerlink" title="示例三：歌单"></a>示例三：歌单</h2><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">%</span> meting <span class="token string">"32040661"</span> <span class="token string">"netease"</span> <span class="token string">"playlist"</span> <span class="token operator">%</span><span class="token punctuation">&#125;</span># 网易</code></pre>            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css">            <script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js"></script>            <script src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script>            <meting-js id="32040661" server="netease" type="playlist" autoplay="false" mutex="true" listmaxheight="340px" preload="auto" theme="#ad7a86"></meting-js><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">%</span> meting <span class="token string">"1628995233"</span> <span class="token string">"tencent"</span> <span class="token string">"playlist"</span> <span class="token operator">%</span><span class="token punctuation">&#125;</span># tencent</code></pre>            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css">            <script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js"></script>            <script src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script>            <meting-js id="1628995233" server="tencent" type="playlist" autoplay="false" mutex="true" listmaxheight="340px" preload="auto" theme="#ad7a86"></meting-js><h5 id="进阶示例"><a href="#进阶示例" class="headerlink" title="进阶示例"></a>进阶示例</h5><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">%</span> meting <span class="token string">"2690544198"</span> <span class="token string">"tencent"</span> <span class="token string">"playlist"</span> <span class="token string">"autoplay"</span> <span class="token string">"mutex:false"</span> <span class="token string">"listmaxheight:340px"</span> <span class="token string">"preload:none"</span> <span class="token string">"theme:#ad7a86"</span><span class="token operator">%</span><span class="token punctuation">&#125;</span></code></pre>            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css">            <script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js"></script>            <script src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script>            <meting-js id="2690544198" server="tencent" type="playlist" autoplay="true" mutex="false" listmaxheight="340px" preload="none" theme="#ad7a86"></meting-js><p><em><strong><a href="https://winsight.github.io/posts/d77e65f8/">👉具体用法</a></strong></em></p><h2 id="示例四"><a href="#示例四" class="headerlink" title="示例四"></a>示例四</h2><p><strong>直接插入</strong></p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">marginwidth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">marginheight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>330</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>86</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//music.163.com/outchain/player?type=2&amp;id=393688&amp;auto=1(控制自动播放)&amp;height=66<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span></code></pre><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=393688&auto=0&height=66"></iframe><h2 id="示例五"><a href="#示例五" class="headerlink" title="示例五"></a>示例五</h2><pre class="language-c++" data-language="c++"><code class="language-c++">#音乐块，标签分别为“歌名”“作者”“音乐mp3链接”“封面链接”&#123;% aplayer &quot;Caffeine&quot; &quot;Jeff Williams&quot; &quot;http:&#x2F;&#x2F;home.ustc.edu.cn&#x2F;~mmmwhy&#x2F;%d6%dc%bd%dc%c2%d7%20-%20%cb%fd%b5%c4%bd%de%c3%ab.mp3&quot; &quot;http:&#x2F;&#x2F;home.ustc.edu.cn&#x2F;~mmmwhy&#x2F;jay.jpg&quot; &quot;lrc:geci.txt&quot; %&#125;</code></pre>            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css">            <script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js"></script>            <div id="mmedia-oWyqGgza" style="margin-bottom: 20px; width: "></div>        <script>          var ap_oWyqGgza = new APlayer({            element: document.getElementById("mmedia-oWyqGgza"),            narrow: false,            autoplay: false,            showlrc: 3,            music: {              title: "Caffeine",              author: "Jeff Williams",              url: "http://home.ustc.edu.cn/~mmmwhy/%d6%dc%bd%dc%c2%d7%20-%20%cb%fd%b5%c4%bd%de%c3%ab.mp3",              pic: "http://home.ustc.edu.cn/~mmmwhy/jay.jpg",              lrc: "geci.txt"            },            undefined          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap_oWyqGgza);        </script><h1 id="视频💻"><a href="#视频💻" class="headerlink" title="视频💻"></a>视频💻</h1><h3 id="示例一："><a href="#示例一：" class="headerlink" title="示例一："></a>示例一：</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">%</span> bilibili <span class="token string">"aid:60016166"</span> <span class="token string">"quality:high"</span> <span class="token string">"danmaku"</span> <span class="token string">"allowfullscreen"</span> <span class="token operator">%</span><span class="token punctuation">&#125;</span></code></pre>        <style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style>        <div class="bbplayer">        <iframe class="bbplayer" id="mmedia-AaMuEBrP" src="//player.bilibili.com/player.html?aid=60016166&page=1&high_quality=1&danmaku=true" allowfullscreen="no" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe>        </div>        <script>            document.getElementById("mmedia-AaMuEBrP").style.height=document.getElementById("mmedia-AaMuEBrP").scrollWidth*0.76+"px";            window.onresize = function(){              document.getElementById("mmedia-AaMuEBrP").style.height=document.getElementById("mmedia-AaMuEBrP").scrollWidth*0.76+"px";            };        </script>        <h3 id="示例二："><a href="#示例二：" class="headerlink" title="示例二："></a>示例二：</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript">#哔哩哔哩视频，数字为aid号<span class="token punctuation">&#123;</span><span class="token operator">%</span> bilibili <span class="token number">587852774</span> <span class="token operator">%</span><span class="token punctuation">&#125;</span></code></pre><div class="bilibili">            <style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style>        <div class="bbplayer">        <iframe class="bbplayer" id="mmedia-HknVOrUt" src="//player.bilibili.com/player.html?aid=null&page=1&high_quality=0&danmaku=false" allowfullscreen="allowfullscreen" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe>        </div>        <script>            document.getElementById("mmedia-HknVOrUt").style.height=document.getElementById("mmedia-HknVOrUt").scrollWidth*0.76+"px";            window.onresize = function(){              document.getElementById("mmedia-HknVOrUt").style.height=document.getElementById("mmedia-HknVOrUt").scrollWidth*0.76+"px";            };        </script>        </div><h3 id="示例三（网络直链）"><a href="#示例三（网络直链）" class="headerlink" title="示例三（网络直链）"></a>示例三（网络直链）</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">%</span> dplayer <span class="token string">"url=http://www.nenu.edu.cn/_upload/article/videos/03/5f/7c999eed42e3aadc413d7f851f0e/0f50b3eb-9285-41d2-ac4d-6cc363651aad_B.mp4"</span> <span class="token string">"pic=http://home.ustc.edu.cn/~mmmwhy/GEM.jpg"</span> <span class="token string">"autoplay=true"</span> <span class="token string">"preload=metadata"</span> <span class="token string">"hotkey=true"</span> <span class="token operator">%</span><span class="token punctuation">&#125;</span> </code></pre><script>console.error("TypeError: Cannot set property 'url=http' of undefined");</script> <h3 id="示例四（本地资源）"><a href="#示例四（本地资源）" class="headerlink" title="示例四（本地资源）"></a>示例四（本地资源）</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">%</span> dplayer <span class="token string">"url=fwz.mp4"</span> <span class="token string">"pic=http://home.ustc.edu.cn/~mmmwhy/GEM.jpg"</span> <span class="token string">"autoplay=true"</span>  <span class="token operator">%</span><span class="token punctuation">&#125;</span></code></pre><script>console.error("TypeError: Cannot set property 'url=fwz.mp' of undefined");</script><h3 id="示例五："><a href="#示例五：" class="headerlink" title="示例五："></a>示例五：</h3><p>可以添加所有有直接链接的视频</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">#可以添加所有有直接链接的视频<span class="token operator">&lt;</span>iframe     width<span class="token operator">=</span><span class="token string">"800"</span>     height<span class="token operator">=</span><span class="token string">"450"</span>     src<span class="token operator">=</span><span class="token string">'https://player.youku.com/embed/XNDE5NjYzOTg0OA=='</span>    frameborder<span class="token operator">=</span><span class="token string">"0"</span>     allowfullscreen<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>iframe<span class="token operator">></span>#可以用下面代码居中<span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"bilibili"</span><span class="token operator">></span>#中间放视频<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></code></pre><iframe width="800" height="450" src="https://player.youku.com/embed/XNDE5NjYzOTg0OA==" frameborder="0" allowfullscreen></iframe><h3 id="PDF文件"><a href="#PDF文件" class="headerlink" title="PDF文件"></a>PDF文件</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">%</span>pdf <span class="token string">"name.pdf"</span> <span class="token operator">%</span><span class="token punctuation">&#125;</span>#本地文件放在相应文件夹中#网络文件放文件直链</code></pre> <div class="row">    <embed src="https://s-bj-1157-text2.oss.dogecdn.com/BITppt.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NEXT主题安装</title>
      <link href="/matery/posts/1a8b75d1/"/>
      <url>/matery/posts/1a8b75d1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\matery\assets\css\APlayer.min.css"><script src="\matery\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://hexo.io/zh-cn/">Hexo</a> 是高效的静态站点生成框架，她基于 <a href="https://nodejs.org/">Node.js</a>。 通过 Hexo 你可以轻松地使用 Markdown 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的 <a href="https://hexo.io/zh-cn/docs/tag-plugins.html">标签插件</a> 来快速的插入特定形式的内容。在这篇文章中，假定你已经成功安装了 Hexo，并使用 Hexo 提供的命令创建了一个站点。</p><p>你可以访问 <a href="https://hexo.io/zh-cn/docs/">Hexo 的文档</a> 了解如何安装 Hexo</p><p>在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。</p><p>为了描述方便，在以下说明中，将前者称为 <strong>站点配置文件</strong>， 后者称为 <strong>主题配置文件</strong>。</p><h2 id="安装-NexT"><a href="#安装-NexT" class="headerlink" title="安装 NexT"></a>安装 NexT</h2><p>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 <code>themes</code> 目录下， 然后修改下配置文件即可。具体到 NexT 来说，安装步骤如下。</p><h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><p>如果你熟悉 <a href="http://git-scm.com/">Git</a>， 建议你使用 克隆最新版本 的方式，之后的更新可以通过 <code>git pull</code> 来快速更新， 而不用再次下载压缩包替换。</p><ul><li><a href="http://theme-next.iissnan.com/getting-started.html#clone">克隆最新版本</a></li><li><a href="http://theme-next.iissnan.com/getting-started.html#stable">下载稳定版本</a></li></ul><p>在终端窗口下，定位到 Hexo 站点目录下。使用 <code>Git</code> checkout 代码：</p><pre class="language-none"><code class="language-none">$ cd your-hexo-site$ git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next themes&#x2F;next</code></pre><p>如果你对 Git 感兴趣，可以通过《Pro Git》这本书来学习。你可以访问我制作的一个 <a href="http://iissnan.com/progit">在线版本（第一版）</a>。</p><h3 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h3><p>与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开 <strong>站点配置文件</strong>， 找到 <code>theme</code> 字段，并将其值更改为 <code>next</code>。</p><p>启用 NexT 主题</p><pre class="language-none"><code class="language-none">theme: next</code></pre><p>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 <code>hexo clean</code> 来清除 Hexo 的缓存。</p><h3 id="验证主题"><a href="#验证主题" class="headerlink" title="验证主题"></a>验证主题</h3><p>首先启动 Hexo 本地站点，并开启调试模式（即加上 <code>--debug</code>），整个命令是 <code>hexo s --debug</code>。 在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出：</p><pre class="language-none"><code class="language-none">INFO  Hexo is running at http:&#x2F;&#x2F;0.0.0.0:4000&#x2F;. Press Ctrl+C to stop.</code></pre><p>此时即可使用浏览器访问 <code>http://localhost:4000</code>，检查站点是否正确运行。</p><p>当你看到站点的外观与下图所示类似时即说明你已成功安装 NexT 主题。这是 NexT 默认的 Scheme —— Muse</p><p><img src="http://theme-next.iissnan.com/uploads/five-minutes-setup/validation-default-scheme-mac.png" alt="img"></p><p>现在，你已经成功安装并启用了 NexT 主题。下一步我们将要更改一些主题的设定，包括个性化以及集成第三方服务。</p><h2 id="主题设定"><a href="#主题设定" class="headerlink" title="主题设定"></a>主题设定</h2><h3 id="选择-Scheme"><a href="#选择-Scheme" class="headerlink" title="选择 Scheme"></a>选择 Scheme</h3><p>Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：</p><ul><li>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li><li>Mist - Muse 的紧凑版本，整洁有序的单栏外观</li><li>Pisces - 双栏 Scheme，小家碧玉似的清新</li></ul><p>Scheme 的切换通过更改 <strong>主题配置文件</strong>，搜索 scheme 关键字。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释 <code>#</code> 去除即可。</p><p>选择 Pisces Scheme</p><pre class="language-none"><code class="language-none">#scheme: Muse#scheme: Mistscheme: Pisces</code></pre><h3 id="设置-语言"><a href="#设置-语言" class="headerlink" title="设置 语言"></a>设置 语言</h3><p>编辑 <strong>站点配置文件</strong>， 将 <code>language</code> 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下：</p><pre class="language-none"><code class="language-none">language: zh-Hans</code></pre><p>目前 NexT 支持的语言如以下表格所示：</p><table><thead><tr><th align="left">语言</th><th align="left">代码</th><th align="left">设定示例</th></tr></thead><tbody><tr><td align="left">English</td><td align="left"><code>en</code></td><td align="left"><code>language: en</code></td></tr><tr><td align="left">简体中文</td><td align="left"><code>zh-Hans</code></td><td align="left"><code>language: zh-Hans</code></td></tr><tr><td align="left">Français</td><td align="left"><code>fr-FR</code></td><td align="left"><code>language: fr-FR</code></td></tr><tr><td align="left">Português</td><td align="left"><code>pt</code></td><td align="left"><code>language: pt</code> or <code>language: pt-BR</code></td></tr><tr><td align="left">繁體中文</td><td align="left"><code>zh-hk</code> 或者 <code>zh-tw</code></td><td align="left"><code>language: zh-hk</code></td></tr><tr><td align="left">Русский язык</td><td align="left"><code>ru</code></td><td align="left"><code>language: ru</code></td></tr><tr><td align="left">Deutsch</td><td align="left"><code>de</code></td><td align="left"><code>language: de</code></td></tr><tr><td align="left">日本語</td><td align="left"><code>ja</code></td><td align="left"><code>language: ja</code></td></tr><tr><td align="left">Indonesian</td><td align="left"><code>id</code></td><td align="left"><code>language: id</code></td></tr><tr><td align="left">Korean</td><td align="left"><code>ko</code></td><td align="left"><code>language: ko</code></td></tr></tbody></table><h3 id="设置-菜单"><a href="#设置-菜单" class="headerlink" title="设置 菜单"></a>设置 菜单</h3><p>菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是 <a href="http://fontawesome.io/">Font Awesome</a> 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景，同时无须担心在 Retina 屏幕下 图标模糊的问题。</p><p>编辑 <strong>主题配置文件</strong>，修改以下内容：</p><ol><li><p>设定菜单内容，对应的字段是 <code>menu</code>。 菜单内容的设置格式是：<code>item name: link</code>。其中 <code>item name </code>是一个名称，这个名称并不直接显示在页面上，她将用于匹配图标以及翻译。</p><p>菜单示例配置</p><pre class="language-none"><code class="language-none">menu:  home: &#x2F;  archives: &#x2F;archives  #about: &#x2F;about  #categories: &#x2F;categories  tags: &#x2F;tags  #commonweal: &#x2F;404.html</code></pre><p>若你的站点运行在子目录中，请将链接前缀的 <code>/</code> 去掉</p><p>NexT 默认的菜单项有（标注 的项表示需要手动创建这个页面）：</p><table><thead><tr><th align="left">键值</th><th align="left">设定值</th><th align="left">显示文本（简体中文）</th></tr></thead><tbody><tr><td align="left">home</td><td align="left"><code>home: /</code></td><td align="left">主页</td></tr><tr><td align="left">archives</td><td align="left"><code>archives: /archives</code></td><td align="left">归档页</td></tr><tr><td align="left">categories</td><td align="left"><code>categories: /categories</code></td><td align="left">分类页</td></tr><tr><td align="left">tags</td><td align="left"><code>tags: /tags</code></td><td align="left">标签页</td></tr><tr><td align="left">about</td><td align="left"><code>about: /about</code></td><td align="left">关于页面</td></tr><tr><td align="left">commonweal</td><td align="left"><code>commonweal: /404.html</code></td><td align="left">公益 404</td></tr></tbody></table></li><li><p>设置菜单项的显示文本。在第一步中设置的菜单的名称并不直接用于界面上的展示。Hexo 在生成的时候将使用 这个名称查找对应的语言翻译，并提取显示文本。这些翻译文本放置在 NexT 主题目录下的 <code>languages/&#123;language&#125;.yml</code> （<code>&#123;language&#125;</code> 为你所使用的语言）。</p><p>以简体中文为例，若你需要添加一个菜单项，比如 <code>something</code>。那么就需要修改简体中文对应的翻译文件 <code>languages/zh-Hans.yml</code>，在 <code>menu</code> 字段下添加一项：</p><pre class="language-none"><code class="language-none">menu:  home: 首页  archives: 归档  categories: 分类  tags: 标签  about: 关于  search: 搜索  commonweal: 公益404  something: 有料</code></pre></li><li><p>设定菜单项的图标，对应的字段是 <code>menu_icons</code>。 此设定格式是 <code>item name: icon name</code>，其中 <code>item name</code> 与上一步所配置的菜单名字对应，<code>icon name</code> 是 Font Awesome 图标的 名字。而 <code>enable</code> 可用于控制是否显示图标，你可以设置成 <code>false</code> 来去掉图标。</p><p>菜单图标配置示例</p><pre class="language-none"><code class="language-none">menu_icons:  enable: true  # Icon Mapping.  home: home  about: user  categories: th  tags: tags  archives: archive  commonweal: heartbeat</code></pre><p>在菜单图标开启的情况下，如果菜单项与菜单未匹配（没有设置或者无效的 Font Awesome 图标名字） 的情况下，NexT 将会使用 作为图标。</p><p>请注意键值（如 <code>home</code>）的大小写要严格匹配</p></li></ol><h3 id="设置-侧栏"><a href="#设置-侧栏" class="headerlink" title="设置 侧栏"></a>设置 侧栏</h3><p>默认情况下，侧栏仅在文章页面（拥有目录列表）时才显示，并放置于右侧位置。 可以通过修改 <strong>主题配置文件</strong> 中的 <code>sidebar</code> 字段来控制侧栏的行为。侧栏的设置包括两个部分，其一是侧栏的位置， 其二是侧栏显示的时机。</p><ol><li><p>设置侧栏的位置，修改 <code>sidebar.position</code> 的值，支持的选项有：</p><ul><li>left - 靠左放置</li><li>right - 靠右放置</li></ul><p>目前仅 Pisces Scheme 支持 <code>position</code> 配置。影响版本<strong>5.0.0</strong>及更低版本。</p><pre class="language-none"><code class="language-none">sidebar:  position: left</code></pre></li><li><p>设置侧栏显示的时机，修改 <code>sidebar.display</code> 的值，支持的选项有：</p><ul><li><code>post</code> - 默认行为，在文章页面（拥有目录列表）时显示</li><li><code>always</code> - 在所有页面中都显示</li><li><code>hide</code> - 在所有页面中都隐藏（可以手动展开）</li><li><code>remove</code> - 完全移除</li></ul><pre class="language-none"><code class="language-none">sidebar:  display: post</code></pre><p>已知侧栏在 <code>use motion: false</code> 的情况下不会展示。 影响版本<strong>5.0.0</strong>及更低版本。</p></li></ol><h3 id="设置-头像"><a href="#设置-头像" class="headerlink" title="设置 头像"></a>设置 头像</h3><p>编辑 <strong>主题配置文件</strong>， 修改字段 <code>avatar</code>， 值设置成头像的链接地址。其中，头像的链接地址可以是：</p><table><thead><tr><th align="left">地址</th><th align="left">值</th></tr></thead><tbody><tr><td align="left">完整的互联网 URI</td><td align="left"><code>http://example.com/avatar.png</code></td></tr><tr><td align="left">站点内的地址</td><td align="left">将头像放置主题目录下的 <code>source/uploads/</code> （新建 uploads 目录若不存在） 配置为：<code>avatar: /uploads/avatar.png</code>或者 放置在 <code>source/images/</code> 目录下 配置为：<code>avatar: /images/avatar.png</code></td></tr></tbody></table><p>头像设置示例</p><pre class="language-none"><code class="language-none">avatar: http:&#x2F;&#x2F;example.com&#x2F;avatar.png</code></pre><h3 id="设置-作者昵称"><a href="#设置-作者昵称" class="headerlink" title="设置 作者昵称"></a>设置 作者昵称</h3><p>编辑 <strong>站点配置文件</strong>， 设置 <code>author</code> 为你的昵称。</p><h3 id="站点描述"><a href="#站点描述" class="headerlink" title="站点描述"></a>站点描述</h3><p>编辑 <strong>站点配置文件</strong>， 设置 <code>description</code> 字段为你的站点描述。站点描述可以是你喜欢的一句签名:)</p><h2 id="集成常用的第三方服务"><a href="#集成常用的第三方服务" class="headerlink" title="集成常用的第三方服务"></a>集成常用的第三方服务</h2><h3 id="百度统计"><a href="#百度统计" class="headerlink" title="百度统计"></a>百度统计</h3><p>注意： baidu_analytics 不是你的百度 id 或者 百度统计 id</p><ol><li>登录 <a href="http://tongji.baidu.com/">百度统计</a>， 定位到站点的代码获取页面</li><li>复制 <code>hm.js?</code> 后面那串统计脚本 id，如： <img src="http://theme-next.iissnan.com/uploads/five-minutes-setup/analytics-baidu-id.png" alt="img"></li><li>编辑 <strong>主题配置文件</strong>， 修改字段 <code>baidu_analytics</code> 字段，值设置成你的百度统计脚本 id。</li></ol><h3 id="阅读次数统计（LeanCloud）-由-Doublemine-贡献"><a href="#阅读次数统计（LeanCloud）-由-Doublemine-贡献" class="headerlink" title="阅读次数统计（LeanCloud） 由 Doublemine 贡献"></a>阅读次数统计（LeanCloud） 由 <a href="https://github.com/iissnan/hexo-theme-next/pull/439">Doublemine</a> 贡献</h3><p>请查看 <a href="https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud">为NexT主题添加文章阅读量统计功能</a></p><h3 id="Algolia-搜索"><a href="#Algolia-搜索" class="headerlink" title="Algolia 搜索"></a>Algolia 搜索</h3><p>详细的配置请参考： <a href="http://theme-next.iissnan.com/third-party-services.html#algolia-search">第三方服务 - Algolia</a></p><h1 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h1><h3 id="hexo使用next主题不能显示"><a href="#hexo使用next主题不能显示" class="headerlink" title="hexo使用next主题不能显示"></a>hexo使用next主题不能显示</h3><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>解决方法：npm i hexo-renderer-swig<br>原因：hexo在5.0之后把swig给删除了需要自己手动安装</p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> next </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客部署到Gitlab pages</title>
      <link href="/matery/posts/ee98dc9f/"/>
      <url>/matery/posts/ee98dc9f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\matery\assets\css\APlayer.min.css"><script src="\matery\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="安装和配置环境"><a href="#安装和配置环境" class="headerlink" title="安装和配置环境"></a>安装和配置环境</h1><p>本教程系统平台为win10 64位家庭中文版。</p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>从Git官网地址：<a href="https://www.git-scm.com/download/">https://www.git-scm.com/download/</a> 下载Git软件，按默认选项安装即可。</p><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>从node.js官网：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a> 下载Node.js软件，推荐下载稳定版本，然后按默认选项安装即可。安装完成后，打开cmd.exe，输入node -v，若能正常显示版本号，则说明安装成功。</p><h2 id="安装Hexo、预览本地hexo博客"><a href="#安装Hexo、预览本地hexo博客" class="headerlink" title="安装Hexo、预览本地hexo博客"></a>安装Hexo、预览本地hexo博客</h2><p>在本地新建一个目录如hexo_blog用来存储hexo博客源码，然后在该目录下打开cmd.exe或Git bash here，依次运行下列命令(一个指令运行完再运行下一个指令)：</p><pre class="language-none"><code class="language-none">npm install hexo-cli -g #安装hexo命令行工具hexo init #下载hexo博客初始源码npm install #安装npmhexo s 或 hexo server #启动本地服务器,可预览本地hexo博客</code></pre><p>如果正常安装完成，在浏览器中访问：<a href="http://localhost:4000/">http://localhost:4000/</a> 就可以看到运行在本地服务器上的博客了。</p><p><strong>注意：</strong></p><p>如果你使用的是Microsoft Edge浏览器，访问<a href="http://localhost:4000/">http://localhost:4000/</a> 时可能会失败，原因是这个浏览器经常偷偷地自动打开使用代理服务器127.0.0.1。关闭后即可正常访问。还有一种可能是你的4000端口被占用了。</p><h1 id="将hexo博客部署到Gitlab-pages上"><a href="#将hexo博客部署到Gitlab-pages上" class="headerlink" title="将hexo博客部署到Gitlab pages上"></a>将hexo博客部署到Gitlab pages上</h1><h2 id="创建Gitlab-pages仓库"><a href="#创建Gitlab-pages仓库" class="headerlink" title="创建Gitlab pages仓库"></a>创建Gitlab pages仓库</h2><p>首先在Gitlab上注册一个账号，或者直接用Github账号登录也可以。</p><p>Gitlab支持project page和user page两种page，只需要创建对应的仓库即可。如果你要创建一个project page，假设project name为blog，那么你的project URL为：<a href="https://gitlab.com/username/blog/">https://gitlab.com/username/blog/</a> 。一旦这个project启用了GitLab pages，并构建了站点，站点访问url为：<a href="https://uesrname.gitlab.io/blog/">https://uesrname.gitlab.io/blog/</a> 。如果你要创建一个user page，假设此时project <a href="http://name为john.gitlab.io/">name为john.gitlab.io</a>(john为你的Gitlab账号名)，则你的project URL为：<a href="https://gitlab.com/john/john.gitlab.io">https://gitlab.com/john/john.gitlab.io</a> 。一旦这个project启用了GitLab pages，并构建了站点，站点访问url为：<a href="https://john.gitlab.io/">https://john.gitlab.io</a> 。</p><p>这里我们新建一个名为username.gitlab.io的仓库，username就是你的Gitlab账户名。</p><h2 id="Gitlab账号添加SSH-key"><a href="#Gitlab账号添加SSH-key" class="headerlink" title="Gitlab账号添加SSH-key"></a>Gitlab账号添加SSH-key</h2><p>点击你的Gitlab账号右上角头像，选择settings，然后在左侧菜单选择SSH keys。然后检查一下你的本地SSH key的情况，在hexo博客源码目录下点击Git bash here，依次输入以下命令：</p><pre class="language-c++" data-language="c++"><code class="language-c++">cd ~&#x2F;.sshls #此时会显示一些文件mkdir key_backupcp id_rsa* key_backuprm id_rsa*#以上三步为备份和移除原来的SSH key设置</code></pre><p>如果第一步cs ~/.ssh出现cd: /c/Users/1234/.ssh: No such file or directory，或者第二步ls后没有文件，则说明你的本地目前没有ssh key(或在windows下查看[c盘-&gt;用户-&gt;自己的用户名-&gt;.ssh]下是否有id_rsa、id_rsa.pub文件)，那么使用命令：</p><pre class="language-c++" data-language="c++"><code class="language-c++">git config --global user.name &quot;winsight1&quot;git config --global user.email &quot;wangss.ch@gmail.com&quot;# --global参数表示你这台机器上所有的Git仓库都会使用这个用户名和邮箱地址的配置来提交，当然也可以对某个仓库指定不同的用户名和Email地址# 用户名和邮箱地址是本地git客户端的一个变量,每次commit都会用用户名和邮箱纪录,github的contributions统计就是按邮箱来统计的。ssh-keygen -t rsa -C &quot;wangss.ch@gmail.com&quot; #生成新的key文件,邮箱地址填你的Github地址</code></pre><p>然后按三次enter生成一个新的SSH key。打开id_rsa.pub文件，将里面的所有内容添加到上面Gitlab账号settings中的SSH key中。</p><h2 id="hexo博客源码目录下添加-gitlab-ci-yml文件"><a href="#hexo博客源码目录下添加-gitlab-ci-yml文件" class="headerlink" title="hexo博客源码目录下添加.gitlab-ci.yml文件"></a>hexo博客源码目录下添加.gitlab-ci.yml文件</h2><p>使用Gitlab pages部署hexo博客和Github pages不同。在Github pages上部署博客，需要先在本地生成各种静态网页和文件，然后再推送到Github pages仓库上就可以直接访问了。使用Gitlab需要在服务器端完成生成和部署两个阶段，需要在本地的hexo博客源码目录下添加一个.gitlab-ci.yml文件用来指导服务器如何处理你提交的源文件。</p><p>最新的.gitlab-ci.yml文件官方版本可以从这个仓库中获取：<a href="https://gitlab.com/pages/hexo/blob/master/.gitlab-ci.yml">https://gitlab.com/pages/hexo/blob/master/.gitlab-ci.yml</a> 。</p><p>.gitlab-ci.yml内容如下：</p><pre class="language-none"><code class="language-none">image: node:8.11.2pages:  cache:    paths:    - node_modules&#x2F;  script:  - npm install hexo-cli -g  - npm install  - hexo clean  - hexo generate  - hexo deploy  artifacts:    paths:    - public  only:  - master</code></pre><h2 id="hexo博客本地源码推送到Gitlab-pages仓库"><a href="#hexo博客本地源码推送到Gitlab-pages仓库" class="headerlink" title="hexo博客本地源码推送到Gitlab pages仓库"></a>hexo博客本地源码推送到Gitlab pages仓库</h2><p>在hexo博客源码目录点击鼠标右键Git bash here，依次运行下列命令：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">git initgit add <span class="token operator">-</span><span class="token constant">A</span>git commit <span class="token operator">-</span>m <span class="token string">"init blog"</span>git remote add origin git@gitlab<span class="token punctuation">.</span>com<span class="token operator">:</span>winsight1<span class="token operator">/</span>winsight<span class="token punctuation">.</span>gitlab<span class="token punctuation">.</span>io<span class="token punctuation">.</span>gitgit push <span class="token operator">-</span>u origin master</code></pre><p>这样我们就将hexo博客本地源码推送到Gitlab pages仓库上了。</p><h3 id="可能存在的问题"><a href="#可能存在的问题" class="headerlink" title="可能存在的问题"></a>可能存在的问题</h3><p>Git 提示fatal: remote origin already exists 错误</p><p>最后找到解决办法如下：</p><p>1、先删除远程 Git 仓库</p><pre class="language-none"><code class="language-none">git remote rm origin</code></pre><p>2、再添加远程 Git 仓库</p><pre class="language-none"><code class="language-none">git@gitlab.com:username&#x2F;username.gitlab.io.gitgit push -u origin master</code></pre><h2 id="开启Gitlab-pages-CI-CD生成Gitlab-pages页面"><a href="#开启Gitlab-pages-CI-CD生成Gitlab-pages页面" class="headerlink" title="开启Gitlab pages CI/CD生成Gitlab pages页面"></a>开启Gitlab pages CI/CD生成Gitlab pages页面</h2><p>上传后，然后Gitlab服务器会自动检查.gitlab-ci.yml脚本是否有效，校验通过后，会自动开始执行脚本。</p><p>点击左侧菜单中的CI/CD-&gt;pipeline可以查看脚本的执行情况，当脚本的Stages状态变为<code>test:passed &amp;&amp; deploy: passed</code>时，说明构建完成。此时已可以访问我们的个人博客站点：<a href="https://username.gitlab.io/">https://username.gitlab.io</a> 。有时构建完成时马上访问可能会出现404页面，这种情况很多人遇到过，这里是该问题的讨论：<a href="https://forum.gitlab.com/t/gitlab-pages-404-for-even-the-simplest-setup/5870">https://forum.gitlab.com/t/gitlab-pages-404-for-even-the-simplest-setup/5870</a> 。其实这是因为Gitlab的服务器构建速度比较慢，等5-10分钟再重新访问页面就正常了。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>使用Gitlab pages部署hexo博客时，我们不需要在本地使用hexo generate命令生成博客静态网页，再push到Gitlab pages仓库，而是直接push了hexo博客的源码到Gitlab pages仓库，同时增加一个.gitlab-ci.yml文件作为CI/CD脚本，通过该文件在Gitlab服务器生成博客的静态网页，然后自动发布到Gitlab pages博客站点上。</p><p>当我们要在博客上写新文章时，只需把Gitlab pages仓库中的源码pull下来，然后使用hexo新建文章，使用markdown编辑器(如typora)编辑文章，完成后将源码再push到Gitlab pages仓库中即可，Gitlab服务器会根据.gitlab-ci.yml文件重新生成博客的静态网页，然后自动发布到Gitlab pages博客站点上。我们可以点击CD/CI configuration让Gitlab服务器自动检测.gitlab-ci.yml文件，若文件正确则自动运行和发布；也可以在Gitlab左侧菜单CI/CD-&gt;Schedules中添加new schedule，这样Gitlab服务器会定时重新运行.gitlab-ci.yml文件来重新发布博客。</p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客部署到Github pages</title>
      <link href="/matery/posts/4b85b242/"/>
      <url>/matery/posts/4b85b242/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\matery\assets\css\APlayer.min.css"><script src="\matery\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="安装和配置环境"><a href="#安装和配置环境" class="headerlink" title="安装和配置环境"></a>安装和配置环境</h1><p>本教程系统平台为win10 64位家庭中文版。</p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>从Git官网地址：<a href="https://www.git-scm.com/download/">https://www.git-scm.com/download/</a> 下载Git软件，按默认选项安装即可。</p><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>从node.js官网：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a> 下载Node.js软件，推荐下载稳定版本，然后按默认选项安装即可。安装完成后，打开cmd.exe，输入node -v，若能正常显示版本号，则说明安装成功。</p><h2 id="安装Hexo、预览本地hexo博客"><a href="#安装Hexo、预览本地hexo博客" class="headerlink" title="安装Hexo、预览本地hexo博客"></a>安装Hexo、预览本地hexo博客</h2><p>在本地新建一个目录如hexo_blog用来存储hexo博客源码，然后在该目录下打开cmd.exe或Git bash here，依次运行下列命令(一个指令运行完再运行下一个指令)：</p><pre class="language-none"><code class="language-none">npm install hexo-cli -g #安装hexo命令行工具hexo init #下载hexo博客初始源码npm install #安装npmhexo s 或 hexo server #启动本地服务器,可预览本地hexo博客</code></pre><p>如果正常安装完成，在浏览器中访问：<a href="http://localhost:4000/">http://localhost:4000/</a> 就可以看到运行在本地服务器上的博客了。</p><p><strong>注意：</strong></p><p>如果你使用的是Microsoft Edge浏览器，访问<a href="http://localhost:4000/">http://localhost:4000/</a> 时可能会失败，原因是这个浏览器经常偷偷地自动打开使用代理服务器127.0.0.1。关闭后即可正常访问。还有一种可能是你的4000端口被占用了。</p><h2 id="在Github上部署hexo博客"><a href="#在Github上部署hexo博客" class="headerlink" title="在Github上部署hexo博客"></a>在Github上部署hexo博客</h2><p>我将部署到Gitlab的hexo博客源码目录命名为hexo_blog_gitlab，现在将这个目录中的博客源码copy一份到一个新目录，比如我将新目录命名为：hexo_blog_github。在新目录hexo_blog_github下鼠标右键选择Git bash here，然后运行下面的命令，安装用于部署hexo博客到Github上的插件：</p><pre class="language-none"><code class="language-none">npm install hexo-deployer-git --save</code></pre><p>这是在Github上部署hexo博客时必须使用的插件。<br>在Github网站新建一个公开仓库，<a href="http://名为yourname.github.io/">名为yourname.github.io</a>，然后勾选Initialize this repository with a README，创建仓库，打开该仓库的settings，如果出现提示：Your site is published at <a href="https://zgcr.github.io/">https://zgcr.github.io/</a> ,则说明Github pages开启成功。<br>修改新目录hexo_blog_github中的_config.yml文件(注意不是主题中的config.yml文件)，修改相应代码块为以下内容：</p><pre class="language-none"><code class="language-none"># Deployment## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.htmldeploy:   type: git  repo: git@github.com:yourname&#x2F;yourname.github.io.git  branch: master</code></pre><p>请把上面的repo内容换成你的Github pags仓库的git链接。完成后，使用下面命令：</p><pre class="language-none"><code class="language-none">hexo cleanhexo ghexo d</code></pre><p>此时可以正常将hexo博客部署到github上了。<br>要想将博客部署要gitlab上，只需在原目录hexo_blog_gitlab中鼠标右键选择Git bash here，使用下面命令：</p><pre class="language-none"><code class="language-none">git add -Agit commit -m &quot;本次提交描述&quot;git push origin master</code></pre><p>即可部署hexo博客至Gitlab上。<br><strong>关于Gitlab/Github的博客同步：</strong><br>目前没有太好的方法，我们每次写新文章可在hexo_blog_gitlab目录中的_post目录下新建和修改文章，完成后将_post目录复制粘贴到hexo_blog_github目录中相同位置，然后分别部署hexo博客到Gitlab和Github即可。</p><h3 id="可能存在的问题"><a href="#可能存在的问题" class="headerlink" title="可能存在的问题"></a>可能存在的问题</h3><ul><li>先是出现错误：<br><code>error：spawn failed...</code></li></ul><h4 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h4><h5 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h5><p>删除<code>.deploy_git</code>文件夹;</p><p>输入</p><pre class="language-none"><code class="language-none">git config --global core.autocrlf false</code></pre><p>然后，依次执行：</p><pre class="language-none"><code class="language-none">hexo cleanhexo ghexo d</code></pre><h5 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h5><p>如果使用GitHub，可以尝试是否能跑通GitHub</p><pre class="language-none"><code class="language-none">SHELLssh -T git@github.com</code></pre><p><a href="https://blog.zhheo.com/p/128998ac.html"><strong>👉详细参考链接</strong></a></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">git config <span class="token operator">--</span>global user<span class="token punctuation">.</span>name <span class="token string">"winsight"</span>git config <span class="token operator">--</span>global user<span class="token punctuation">.</span>email <span class="token string">"wangss.ch@gmail.com"</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
          <category> Github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github连接问题及相关解决方案</title>
      <link href="/matery/posts/7c6059c5/"/>
      <url>/matery/posts/7c6059c5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\matery\assets\css\APlayer.min.css"><script src="\matery\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>进入git bash界面然后：</p><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><pre class="language-php" data-language="php"><code class="language-php">git config <span class="token operator">--</span><span class="token keyword">global</span> <span class="token operator">--</span><span class="token keyword">list</span> </code></pre><p>验证邮箱与GitHub注册时输入的是否一致</p><h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><p>通过</p><pre class="language-php" data-language="php"><code class="language-php">git config <span class="token operator">--</span><span class="token keyword">global</span> user<span class="token operator">.</span>name <span class="token string double-quoted-string">"winsight"</span>git config <span class="token operator">--</span><span class="token keyword">global</span> user<span class="token operator">.</span>email <span class="token string double-quoted-string">"wangss.ch@gmail.com"</span><span class="token comment">#（这里得名字和邮箱都是注册github时用的）</span></code></pre><p>设置全局用户名和邮箱。</p><h3 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h3><pre class="language-php" data-language="php"><code class="language-php">ssh<span class="token operator">-</span>keygen <span class="token operator">-</span>t rsa <span class="token operator">-</span><span class="token constant">C</span> “这里换上你的邮箱”</code></pre><p>一路回车，在出现选择时输入Y，再一路回车直到生成密钥。会在/Users/***/路径下生成一个.ssh文件夹，密钥就存储在其中。</p><h3 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h3><p>到git仓库，添加秘钥</p><h3 id="第五步"><a href="#第五步" class="headerlink" title="第五步"></a>第五步</h3><pre class="language-php" data-language="php"><code class="language-php">ssh <span class="token operator">-</span><span class="token constant">T</span> git@github<span class="token operator">.</span>com</code></pre><p>测试一下通不通，通了显示如下</p><p>即可正常使用。<br>不通就是</p><pre class="language-php" data-language="php"><code class="language-php">ssh<span class="token operator">-</span>agent <span class="token operator">-</span>sssh<span class="token operator">-</span>add <span class="token operator">~</span><span class="token operator">/</span><span class="token operator">.</span>ssh<span class="token operator">/</span>id_rsa </code></pre><p>操作这两步</p>]]></content>
      
      
      <categories>
          
          <category> Github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么两个矩阵乘积的行列式的值等于矩阵行列式的乘积？</title>
      <link href="/matery/posts/a407e9d6/"/>
      <url>/matery/posts/a407e9d6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\matery\assets\css\APlayer.min.css"><script src="\matery\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1、面积类比"><a href="#1、面积类比" class="headerlink" title="1、面积类比"></a>1、面积类比</h1><p><img src="/matery/.io//det(ab)=det(a)det(b)/image-20210515222923665.png" alt="image-20210515222923665"></p><h1 id="2、证明"><a href="#2、证明" class="headerlink" title="2、证明"></a>2、证明</h1><p>作者：王赟 Maigo<br>链接：<a href="https://www.zhihu.com/question/48497108/answer/111251804">https://www.zhihu.com/question/48497108/answer/111251804</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p><strong>引理1：将行列式的某一行（列）乘以某一系数加到另一行（列）上去，不改变行列式的值。</strong></p><blockquote><p>证明思路：设把行列式的第i行乘以k后，加到第j行上去。把新的行列式按第j行展开，可以发现展开的结果是两部分的和，一部分就是原行列式的值，另一部分是另一个行列式的值，这个行列式的第j行就是第i行的k倍。有两行线性相关的行列式，其值为0，故引理得证。列变换同理。</p></blockquote><p><strong>引理2：上三角行列式的值，等于所有对角元之积。</strong></p><blockquote><p>证明略。</p></blockquote><p><strong>引理3：两个上三角矩阵相乘，结果仍是上三角矩阵，且其每个对角元正是原来两个矩阵相应对角元之积。</strong></p><blockquote><p>证明略。</p></blockquote><p><strong><code>det(AB) = det(A) det(B)</code> 的证明：</strong></p><blockquote><p>用引理1中的行变换，将A变成上三角阵A’（过程类似高斯消元法）；用引理1中的列变换，将B变成上三角阵B’。由引理1，<code>det(A&#39;) = det(A)，det(B&#39;) = det(B)</code>。</p><p>将同样的行变换和列变换作用于AB。由于行变换相当于左乘一个矩阵，列变换相当于右乘一个矩阵，所以变换的结果是A’B’。由引理1，<code>det(A&#39;B&#39;) = det(AB)</code>。</p><p>由引理2、3，<code>det(A&#39;B&#39;) = det(A&#39;) det(B&#39;)</code>，故有<code>det(AB) = det(A) det(B)</code>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
            <tag> 线性代数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《一生所爱》最经典版本，二胡声起时，音符穿魂而过</title>
      <link href="/matery/posts/3d4657b1/"/>
      <url>/matery/posts/3d4657b1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\matery\assets\css\APlayer.min.css"><script src="\matery\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>卢冠廷音乐作品品鉴会，经典再现大话西游《一生所爱》，二胡声起时，音符穿魂而过。</p><span id="more"></span>]]></content>
      
      
      
        <tags>
            
            <tag> 视频 </tag>
            
            <tag> bilibili </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SMT用焊料、助焊剂、焊锡膏、胶粘剂</title>
      <link href="/matery/posts/f4a065c/"/>
      <url>/matery/posts/f4a065c/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="6bbfe8fdb7a64816bf25f372c104d9dbfc55db67d5fbc4388367ef2c5c9d8430">10d79030e8222445804370796b90fca14b3382df4730eb0fe3a9f1aa6acbfdf977f308135c251cf4014cb9472e5eb4c7010efd08fb0e3bdf1ebef1844b47b7bbdce99f87d5af857ca0ff659bfd7ff8400c26cb53f1df3549f1dd4374837f4afad26c4bcebfc91da17a858047cffcabb374882e68b4f2eb3b2076175457a48050068acafe49383337eaad645ce94befdc1c0be60245278b00454e52460da8559d0234e8d917289847e7c2d3618de88bf88a83f9c325633632cf224cc127ee37259b3db1de054f6903aeafcbc5e961fecabaf6bcd116c768176997a0f7d6981802a3ea30f94a57b7f686efd39990b2b259999498d1e0ee86438f553ce6aa92269d034a8f7e68eec4d1c8c751b8815824fff44a54a03a861259ee3e9629629f4700935957a0fde7a775a3391f6d4d261dc46f905c4c43875a0ace330511f0dc66320a661ef4ef1f8bee5cd95a45481e151262010ff945f6ef60d7b73c25516c851cd8a2a0a898ead3f47dbbd2c4faf58e625e91b0ed00658124c848f0957ef10df26bd79d0da62d49f028a9a5aa1f104161be781e27315c2294111d2cca3a97b62c3c9cf961a954f22db40951c25a082f0a27109ab48c28834fd5ba80f0a34da8aa914bb18b2142ce2ec7ced531b80ca8177cfd8027ec80657ecf7f4a20c7639eda61285e6973d2aca8a4eea07ee2473433c37d1492ab0139c9ce55fc6fe880a7b2</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/matery/lib/hbe.js"></script><link href="/matery/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> pdf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【郎朗】海 上 东 北 钢 琴 师</title>
      <link href="/matery/posts/d3a70d26/"/>
      <url>/matery/posts/d3a70d26/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\matery\assets\css\APlayer.min.css"><script src="\matery\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这鬼畜质量至少倒退了五年！！！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 视频 </tag>
            
            <tag> bilibili </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>发展党员工作手册</title>
      <link href="/matery/posts/e24f9ab0/"/>
      <url>/matery/posts/e24f9ab0/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="178b8b42a398cbaae5d1b2007112041f3382bf42a08a6ea61040ea2a41f36c87">10d79030e8222445804370796b90fca14b3382df4730eb0fe3a9f1aa6acbfdf977f308135c251cf4014cb9472e5eb4c7010efd08fb0e3bdf1ebef1844b47b7bbdce99f87d5af857ca0ff659bfd7ff8400c26cb53f1df3549f1dd4374837f4afad26c4bcebfc91da17a858047cffcabb374882e68b4f2eb3b2076175457a48050068acafe49383337eaad645ce94befdc1c0be60245278b00454e52460da8559d0234e8d917289847e7c2d3618de88bf88a83f9c325633632cf224cc127ee37259b3db1de054f6903aeafcbc5e961fecabaf6bcd116c768176997a0f7d6981802321a5be5295787cafd5b3bcdf600da4a4dd3f50539d926687c23af82353f815051a252310c4e47c82c98296e080edd4f48a2b6378554dd8876f934b6900c51c54afa0aea44e5612b25593662f5effac56ebebd8519069b818de1e4eff6532a7fc12f395abf420eba9881af5a3a472da4d59c14d6433e0aeba62b2f57a01fa77a9d0d1f8cf0af6cd61ad5cd779e3a2bdc3b9493f32136fcd5190b67dd8e8b7519c9f2afdef0071697240020cb7d3ba516bc66395ded6c2ba4953a773eed1b3d7c361047960da4d661e26043c7e3d74d66d25e15e4978bdddca2c4e2f4aa97cf42291d39f9775679a5e421f7393231176769fe8870630bca8f69c830bf15307cde8882e367ba11c43aef1da6c43f6ad90c0acc725d70caa640910835a024bf4955bdf7ab8aa3c938f124c3bcc38950089ec7fb7103a701d31eaadf74ab2ecaddf4916210a73fd90081eb345942e65ce421428769132715c696a76c59333d2ecdb7fe27d9ec426a4381eeae1114544e9f6c44bac0ba78813bea9110b7e21ba02f39558cdef3bcd4476278bbcc6fac21f78608a70336a558df3334901f9722b6731046e94dc929e953a10df472f4f26991ba8f1ad39af0624165173c71b1cd39d77a6fd746c037da2d569626bdf8f5825ab2fbb6911bd69e2f61dde0bc6ec74dcaf958beb8c2258021e5473d6982d2ff4ceb</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/matery/lib/hbe.js"></script><link href="/matery/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> pdf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>社会实践论文</title>
      <link href="/matery/posts/edf24525/"/>
      <url>/matery/posts/edf24525/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9b85009933e8944e27a91d8f485e8f0539b837c01350afc2610c4080d293944d">10d79030e8222445804370796b90fca14b3382df4730eb0fe3a9f1aa6acbfdf977f308135c251cf4014cb9472e5eb4c7010efd08fb0e3bdf1ebef1844b47b7bbdce99f87d5af857ca0ff659bfd7ff8400c26cb53f1df3549f1dd4374837f4afad26c4bcebfc91da17a858047cffcabb374882e68b4f2eb3b2076175457a48050068acafe49383337eaad645ce94befdc1c0be60245278b00454e52460da8559d0234e8d917289847e7c2d3618de88bf88a83f9c325633632cf224cc127ee37259b3db1de054f6903aeafcbc5e961fecabaf6bcd116c768176997a0f7d6981802321a5be5295787cafd5b3bcdf600da4a4dd3f50539d926687c23af82353f815051a252310c4e47c82c98296e080edd4f48a2b6378554dd8876f934b6900c51c54afa0aea44e5612b25593662f5effac56ebebd8519069b818de1e4eff6532a7fc12f395abf420eba9881af5a3a472da4d59c14d6433e0aeba62b2f57a01fa77a9d0d1f8cf0af6cd61ad5cd779e3a2bdc3b9493f32136fcd5190b67dd8e8b7519c9f2afdef0071697240020cb7d3ba516bc66395ded6c2ba4953a773eed1b3d7c361047960da4d661e26043c7e3d74d66d25e15e4978bdddca2c4e2f4aa97cf42291d39f9775679a5e421f7393231176769fe8870630bca8f69c830bf15307cde8882e367ba11c43aef1da6c43f6ad90c0acc725d70caa640910835a024bf4955bdf7ab8aa3c938f124c3bcc38950089ec7fb7103a701d31eaadf74ab2ecaddf4916210a73fd90081eb345942e65ce421428769132715c696a76c59333d2ecdb7fe27d9ec426a4381eeae1114544e9f6cdd27c41c2a3cbeea6410fc16d19ade7bf469b1de0668910bc3d664854ae90605b5585cede14a0b33fb33aa7e952e2ca8494ef0576848c132b8761566dfbdb673288ad5b1fd5f0b5e72e8ac6fa8526418</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/matery/lib/hbe.js"></script><link href="/matery/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> pdf </tag>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《苏联亡党亡国20年祭》超清总集精编版</title>
      <link href="/matery/posts/a06812ca/"/>
      <url>/matery/posts/a06812ca/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\matery\assets\css\APlayer.min.css"><script src="\matery\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style>        <div class="bbplayer">        <iframe class="bbplayer" id="mmedia-GItqDHDw" src="//player.bilibili.com/player.html?aid=758078638&page=1&high_quality=1&danmaku=true" allowfullscreen="no" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe>        </div>        <script>            document.getElementById("mmedia-GItqDHDw").style.height=document.getElementById("mmedia-GItqDHDw").scrollWidth*0.76+"px";            window.onresize = function(){              document.getElementById("mmedia-GItqDHDw").style.height=document.getElementById("mmedia-GItqDHDw").scrollWidth*0.76+"px";            };        </script>        <p>苏共亡党、苏联解体已过去数十年，但克里姆林宫上空红色的带有镰刀锤子图案的苏联国旗悄然落下的那令人叹息的一幕，却仿佛永远定格在眼帘。这是中国社科院世界社会主义研究中心制作的6集党员教育专题片《苏联亡党亡国20年祭——俄罗斯人在诉说》，沉痛的历史教训，前车之鉴不能忘！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 视频 </tag>
            
            <tag> bilibili </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>葛大爷在三十年前就给我们上了一课！</title>
      <link href="/matery/posts/53068437/"/>
      <url>/matery/posts/53068437/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\matery\assets\css\APlayer.min.css"><script src="\matery\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style>        <div class="bbplayer">        <iframe class="bbplayer" id="mmedia-FeqMKzUS" src="//player.bilibili.com/player.html?aid=333064283&page=1&high_quality=1&danmaku=true" allowfullscreen="no" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe>        </div>        <script>            document.getElementById("mmedia-FeqMKzUS").style.height=document.getElementById("mmedia-FeqMKzUS").scrollWidth*0.76+"px";            window.onresize = function(){              document.getElementById("mmedia-FeqMKzUS").style.height=document.getElementById("mmedia-FeqMKzUS").scrollWidth*0.76+"px";            };        </script>        ]]></content>
      
      
      
        <tags>
            
            <tag> 视频 </tag>
            
            <tag> bilibili </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“我想做这样的人”——5.4给青年朋友的两点建议</title>
      <link href="/matery/posts/2fff1021/"/>
      <url>/matery/posts/2fff1021/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\matery\assets\css\APlayer.min.css"><script src="\matery\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style>        <div class="bbplayer">        <iframe class="bbplayer" id="mmedia-rqLLEBWP" src="//player.bilibili.com/player.html?aid=887904817&page=1&high_quality=1&danmaku=true" allowfullscreen="no" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe>        </div>        <script>            document.getElementById("mmedia-rqLLEBWP").style.height=document.getElementById("mmedia-rqLLEBWP").scrollWidth*0.76+"px";            window.onresize = function(){              document.getElementById("mmedia-rqLLEBWP").style.height=document.getElementById("mmedia-rqLLEBWP").scrollWidth*0.76+"px";            };        </script>        <p>其实大家会发现读书是一个悖论，读书是一个什么悖论呢？我因为求知而读书，但是当我越来越阅读的时候，我越来越承认自己的无知，这是悖论啊！我们因为无知而读书，而我们读书让我们更加的觉得自己无知。但是很多人读书为了什么，很多人读书只是为了炫耀，很多人读书只是为了在写文章的时候需要张说、李说、王二麻子说，很多人读书只是为了显示自己知识上的优越感，那你可能就读到狗肚子里去了。我经常觉得有些学者傲慢清高，在很多时候只是不学无术的一种体现，还是苏格拉底所说的，承认自己的无知乃是开启智慧的大门，当我越来越多的阅读，当我独上高楼，望尽天涯路我才觉得，啊，我离天还有那么的遥远，我永远也到不了。</p><p>我是如此的渺小，如此的无知，在知识的海洋中，我永远无法遨游。<br>大家一定要注意，不是为你的无知而辩护，有人说，那既然这样还读什么书啊，那庄子说的就是对的呀，吾生也有涯，而知也无涯，已有涯逐无涯，殆矣。</p><p>这是不对的，你看似悖论，但它叫似非而是，中文只有似是而非，大家看着跟法制很像，但那叫似是而非，但是还要注意一个词语叫似非而是，我们基于无知而读书，而我们越阅读，我们越承认自己的无知，不是让无知走向有知，这叫似非而是。所以当你不断的阅读，你才能接受理性的有限，而一旦当你接受理性的有限，你就会拥抱现实主义的人性观，你才会拒绝在地上建立天国，你才会拒绝人类历史上种种乌托邦的诱惑，所以你才会真正的意识到，往往是那些善良的愿望导致的人间地狱。<br>凡是在地上建立天国，最终都是通往人间地狱。<br>你要承认自己理性的有限，你要接受自己人性的幽暗，所以法治永远不是最好的选择，法治是一个相对不坏的选择。因为法治是基于对人性幽暗的认识，法治是对理性有限的认识。<br>这是第一步，去阅读经典，跟人类伟大的经典对话。<br>第二，去培养自己的责任感，尤其是在座的年轻朋友，很多同学觉得人生虚无，觉得人生没有意义，那我想告诉你，当你说没有意义的时候一定有意义这个概念。如果认为人生真的没有意义，那说没有意义是没有意义的。当你说人生没有意义那一定有意义的存在。</p><p>我感到激动，但是我又感到平静。<br>它告诉我，要诚实的对待自己的职业，今生是我们的哨岗，我们有很多职分，要诚实的对待我们的职业，大家都知道，人这一生能够自己决定的事情很少。<br>我也不知道，最近有人说我比较火，我也不知道为什么就火起来了，这是你自己的成就吗？这不是的，一个人很难决定自己的成就，人这一生95%的东西是自己决定不了的。你的出生，你的智商，你一生中的贵人相助，无数的力量把你推举，这都不是你自己决定的，所以这就是为什么当任何人取得了成就，他一定要积极的回馈这个世界。<br>我居住在北京，北京是一线城市，我有一个很好的朋友跟我说过，你居住在一线城市本身就是代表着责任，中国有几个一线诚市，当你在一线城市享受了种种的福利，那你对这个国家就有它的使命，所以我真的希望在座的朋友能够培养自己的责任感。而如果你要培养自己的责任感，一定不要走捷径，换言之，很多时候你要延缓你欲望的满足，你要学会克制，责任跟幸福并不矛盾，</p><p>而且各位会发现，人类所有的成就靠的都是艰辛的努力，在座的有很多同学觉得学外语很累，那是很累呀，但是如果当你能够用英文去读莎士比亚，你就会觉得你付出的一切努力都是值得的，所以不要去满足于那种及时行乐的快餐文化，人要有责任感一定要学会克制，娱乐至死，一个娱乐至死的民族，是不会有责任感的！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 视频 </tag>
            
            <tag> bilibili </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IYPT-2021 同步蜡烛</title>
      <link href="/matery/posts/912d800d/"/>
      <url>/matery/posts/912d800d/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="2e41685dd9665a1d0495cc2e0047e2666dd7fc02cad0af3d5dff32af560f29fb">10d79030e8222445804370796b90fca14b3382df4730eb0fe3a9f1aa6acbfdf977f308135c251cf4014cb9472e5eb4c7010efd08fb0e3bdf1ebef1844b47b7bbdce99f87d5af857ca0ff659bfd7ff8400c26cb53f1df3549f1dd4374837f4afad26c4bcebfc91da17a858047cffcabb374882e68b4f2eb3b2076175457a48050068acafe49383337eaad645ce94befdc1c0be60245278b00454e52460da8559d0234e8d917289847e7c2d3618de88bf88a83f9c325633632cf224cc127ee37259b3db1de054f6903aeafcbc5e961fecabaf6bcd116c768176997a0f7d6981802321a5be5295787cafd5b3bcdf600da4a4dd3f50539d926687c23af82353f815051a252310c4e47c82c98296e080edd4f48a2b6378554dd8876f934b6900c51c54afa0aea44e5612b25593662f5effac56ebebd8519069b818de1e4eff6532a7fc12f395abf420eba9881af5a3a472da4d59c14d6433e0aeba62b2f57a01fa77a9d0d1f8cf0af6cd61ad5cd779e3a2bdc3b9493f32136fcd5190b67dd8e8b7519c9f2afdef0071697240020cb7d3ba516bc66395ded6c2ba4953a773eed1b3d7c361047960da4d661e26043c7e3d74d66d25e15e4978bdddca2c4e2f4aa97cf42291d39f9775679a5e421f7393231176769fe8870630bca8f69c830bf15307cde8882e367ba11c43aef1da6c43f6ad90c0acc725d70caa640910835a024bf4955bdf7ab8aa3c938f124c3bcc38950089ec7fb7103a701d31eaadf74ab2ecaddf4916210a73fd90081eb345942e65ce421428769132715c696a76c59333d2ecdb7fe27d9ec426a4381eeae1114544e9f6c3b305cf534010ca5f1483b3e9a59c07aaf9ebec41c52bba7355690265a2c6b16dd8a9b03e1a0e1e978a85ec9922dd609cfe16a314301ec8824b1352e82a4f22b79cb464a359f036c876106932c714455</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/matery/lib/hbe.js"></script><link href="/matery/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> pdf </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
